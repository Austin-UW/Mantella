{"version":3,"sources":["store/defaultState.ts","store/reducers/createReducer.ts","utils/utilities.ts","store/reducers/tasks.ts","store/reducers/projects.ts","store/reducers/pomodoro.ts","store/reducers/user.ts","store/reducers/reducer.ts","store/store.ts","store/actions/pomodoro.ts","utils/convertToTime.tsx","components/Pomodoro/Controls.tsx","components/Pomodoro/Display.tsx","components/styles/utils.ts","components/Pomodoro/Stopwatch.tsx","components/Pomodoro/Pomodoro.tsx","components/Pomodoro/Swal.ts","components/styles/formStyles.ts","store/actions/snackbar.ts","store/actions/project.ts","API/initialize.ts","store/actions/auth.ts","graphql/fragments.ts","graphql/mutations/auth.ts","components/Auth/Auth.tsx","graphql/mutations/project.ts","components/createProject/CreateProject.tsx","components/NoMatch/NoMatch.tsx","components/Landing/FeatureTable.tsx","components/Landing/FeatureGallery.tsx","components/Landing/About.tsx","components/ProjectFinder/ProjectFinder.tsx","components/Header.tsx","components/utils/SnackbarRoot.tsx","apollo.ts","components/utils/Routing.tsx","store/actions/list.ts","graphql/mutations/list.ts","components/Project/CreateColumn.tsx","components/Project/ProjectSettings.tsx","utils/hasPassed.ts","utils/formatDueDate.tsx","store/actions/task.ts","graphql/mutations/task.ts","components/Project/Task/Base.tsx","colors.ts","components/utils/chooseColor.tsx","components/Project/Task/Create.tsx","components/Project/Cell/ProjectCell.tsx","components/Project/Task/Edit.tsx","components/Project/Project.tsx","components/Settings/Settings.tsx","components/Calendar/WeekDay.tsx","components/Calendar/WeekControls.tsx","components/Calendar/Week.tsx","index.tsx"],"names":["defaultState","user","pomodoro","paused","working","selectingTask","selectedTaskId","currSeconds","breakSeconds","workSeconds","stopWatch","pastTimes","time","highest","snackbar","open","message","variant","isLoading","projects","createReducer","initialState","actionsMap","state","arguments","length","undefined","action","createNextState","draft","caseReducer","type","id","arr","passedId","findIndex","item","formalize","str","toLowerCase","replace","getAllTasks","tasks","map","project","concat","Object","toConsumableArray","getProjectIdFromTaskId","taskId","result","values","proj","task","taskCases","TICK","projectId","timeWorkedOn","SET_TASK","newTask","lists","list","taskIds","includes","splice","indexOf","tsk","objectSpread","SET_SUBTASK","subTasks","newSubtask","projectCases","SET_PROJECT","SET_LIST","changing","newList","push","name","SET_PROJECTS","projectsReducer","pomodoroReducer","pom","TOGGLE_TIMER","SET_LENGTH_MINUTES","slice","operationType","changingCurrent","minutes","newSeconds","RESET_POMODORO","SELECT_POMODORO_TASK","TOGGLE_SELECTING_TASK","SET_TIME_DEV","TICK_STOPWATCH","Math","max","TOGGLE_STOPWATCH","RESET_STOPWATCH","userReducer","REGISTER","LOGIN","snackbarReducer","OPEN_SNACKBAR","CLOSE_SNACKBAR","loadingReducer","START_LOADING","STOP_LOADING","reducer","combineReducers","composeEnhancers","composeWithDevTools","actionCreators","trace","traceLimit","store","createStore","applyMiddleware","invariant","thunk","toggleTimerA","toDaysHHMMSS","s","verbose","days","floor","hours","measuredTime","Date","setSeconds","toISOString","setLengthA","args","byMinutes","Controls","connect","workTime","breakTime","props","react_default","a","createElement","Fragment","style","textAlign","fontSize","margin","display","Button","onClick","color","width","marginLeft","marginRight","Add","fullWidth","Remove","reset","toggleSelectingTask","setTimeDev","Display","timeLeft","buttonText","Paper","minHeight","marginBottom","marginTop","backgroundColor","padding","float","toggleWorking","centerChildren","alignItems","justifyContent","interval","setInterval","Infinity","tickStopwatch","toggleStopwatch","Stopwatch","useEffect","clearInterval","renderprops","items","from","opacity","enter","leave","show","transitionStyles","PlayArrow","Pause","toggleTimer","tick","Pomodoro","withStyles","theme","createStyles","card","position","bottom","spacing","outline","left","maxWidth","minWidth","zIndex","closeButton","right","top","palette","grey","_useState","useState","_useState2","slicedToArray","tab","setTab","React","document","title","classes","stateFunc","toggleButtonText","text","icon","Dialog","buttons","stop","value","toggle","then","Swal","Card","className","DialogTitle","IconButton","Close","Tabs","onChange","e","v","Tab","label","Settings","formStyles","layout","defineProperty","breakpoints","up","paper","flexDirection","avatar","height","secondary","main","submit","openSnackbarA","setProjectA","newProj","selectMemberA","fetchQuery","_ref","asyncToGenerator","regenerator_default","mark","_callee","queryString","variables","axiosFunc","data","wrap","_context","prev","next","axios","post","query","withCredentials","sent","abrupt","_x","_x2","apply","this","initializeAuthState","dispatch","getState","transformUser","username","profileImg","joinedIds","email","loginA","taskFields","gql","_templateObject","listFields","_templateObject2","_templateObject3","projectFields","_templateObject4","userFields","_templateObject5","GQL_LOGIN","auth_templateObject","GQL_REGISTER","auth_templateObject2","GQL_LOGIN_WITH_COOKIE","auth_templateObject3","GQL_LOGOUT","auth_templateObject4","GQL_LOGIN_AS_GUEST","auth_templateObject5","openSnackbar","register","authUser","login","AuthRender","authType","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","confirmText","setConfirmText","_useState7","_useState8","setUsername","Helmet_default","content","react_components_esm","onCompleted","registerData","window","location","hash","onError","error","mutation","auth","autoComplete","onSubmit","preventDefault","Avatar","LockOpen","Typography","component","Link","to","TextField","required","target","Grid","container","justify","loading","CircularProgress","disabled","trim","alignContent","src","GQL_CREATE_PROJECT","project_templateObject","GQL_DELETE_PROJECT","project_templateObject2","GQL_EDIT_PROJECT","project_templateObject3","setProject","CreateProject","setName","_useMutation","useMutation","createProject","_useMutation2","createProjectExec","react","CalendarTodayRounded","autoFocus","NoMatch","tableHeadData","features","styles","paddingBottom","FeatureTable","Table","TableHead","TableRow","val","i","TableCell","key","TableBody","feature","Check","Traffic","galleryOptions","description","FeatureGallery","flexWrap","galleryOption","flex","borderRadius","Icon_Icon","fontWeight","About","heroContent","heroTitle","kayLink","Helmet","async","defer","loginAsGuest","size","align","gutterBottom","data-version","data-size","data-locale","data-type","data-theme","data-vanity","rel","href","FeatureTable_FeatureTable","FeatureGallery_FeatureGallery","ProjectFinder","withRouter","search","setSearch","filter","myString","searchInput","List","subheader","ListSubheader","urlPrefix","whiteSpace","ListItem","button","pathname","split","toString","ListItemText","primary","noButton","noAuthItems","menuIcon","Help","HowToReg","authItems","CalendarToday","Routed","authenticated","drawer","setDrawer","anchorEl","setAnchorEl","MenuItems","menuItem","AppBar","appBar","Toolbar","xs","paddingTop","currentTarget","Menu_default","Menu_Menu","Boolean","onClose","inline","noWrap","transform","trailProps","textDecoration","paddingRight","tagline","iconContainer","iconButton","tabContainer","indicatorColor","textColor","index","NavLink","root","tabItem","Tooltip","toUpperCase","Drawer","anchor","ListItemIcon","Header","boxShadow","borderBottom","link","down","closeSnackbar","SnackbarRoot","success","warning","standard","dark","close","variantIcon","CheckCircleIcon","WarningIcon","ErrorIcon","Info","backgroundClass","getClassSnackbarVariant","Icon","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","SnackbarContent","Close_default","client","ApolloClient","connectToDevTools","ApolloLink","graphQLErrors","networkError","_ref2","locations","path","console","HttpLink","uri","credentials","cache","InMemoryCache","mapState","PrivateRoute","PropComponent","componentProps","rest","objectWithoutProperties","react_router","assign","render","params","match","PublicOnlyRoute","setListA","GQL_CREATE_LIST","list_templateObject","GQL_DELETE_LIST","list_templateObject2","list_templateObject3","setList","CreateColumn","createList","createListExec","projId","DialogContent","DialogContentText","DialogActions","ProjectSettings","_React$useState","_React$useState2","hasClicked","setClicked","deleteProject","deleteProjectExec","ListItemAvatar","Delete","maxHeight","hasPassed","date","isArray","isBefore","god","hasOver","formatDistance","overdueFormat","format","baseFormat","formatDueDate","hasOverDue","dueDate","recurrance","setTaskA","cloneDeep","GQL_SET_SUBTASK","task_templateObject","GQL_SET_COMMENT","task_templateObject2","GQL_CREATE_TASK","task_templateObject3","GQL_EDIT_TASK","task_templateObject4","GQL_DRAG_TASK","task_templateObject5","_templateObject6","SubtaskMap","onCheckbox","initial","native","keys","subTask","overflow","div","completed","CheckBox","stopPropagation","CheckBoxOutlineBlankOutlined","selectPomodoroTask","stopSelectingMember","selectMember","setSubtask","BaseTask","badgeColor","badge","input","cursor","play","ownProps","isSelectingTask","isCurrentTask","showComments","setShowComments","showSubTasks","setShowSubTasks","formatDate","setFormatDate","callback","delay","savedCallback","useRef","current","useInterval","provided","snapshot","openFunc","log","setSubtaskExec","ref","innerRef","draggableProps","dragHandleProps","border","isDragging","Badge","colorSecondary","badgeContent","points","progress","Base_SubtaskMap","newSub","subtaskId","info","comments","comment","dateAdded","Comment","esm_List","alignSelf","LinearProgress","colors","White","Blue","Red","Yellow","Orange","Purple","cyan","Green","Magenta","Brown","ChooseColor","hasAllOption","gradientNames","join","FormControl","Select","MenuItem","selected","background","uuidv1","FormHelperText","CreateTask","setColor","setPoints","listId","setListId","_useState9","_useState10","setDueDate","createTask","createTaskExec","taskInfo","persist","parseInt","chooseColor_ChooseColor","lib","dropUp","containerClassName","ProjectCell","creating","setCreating","deletingList","setDeletingList","borderRight","borderTop","borderLeft","collapsedLists","overflowY","esm_Menu","collapseList","deleteList","setTimeout","react_beautiful_dnd_esm","isDropDisabled","droppableId","dropProvided","dropSnapshot","droppableProps","draggableId","dragProvided","dragSnapshot","placeholder","columnId","setTask","EditTaskModal","_useMutation3","setComment","setCommentExec","_useMutation5","editTaskExec","_useMutation7","_ref3","dragTask","dragTaskExec","ownerListId","find","newIndex","tasksInNewProgress","filterTask","indexesInList","tasko","min","oldListId","newListId","newProgress","paddingLeft","_ref4","getAllListsArr","DateTimePicker_default","Checkbox","disableRipple","checked","newCompleteStatus","onBlur","sub","subTaskId","uuid","commentId","newComments","getMobile","innerWidth","Project","fab","tooltip","appbar","textOverflow","&:hover","&:focus","borderColor","editingTaskId","setEditingTaskId","settings","setSettings","dialogOpen","setDialogOpen","setIsMobile","setCollapsedLists","_useState11","_useState12","deleteListExec","_useState13","_useState14","windowWidth","setWindowWidth","addEventListener","removeEventListener","editProjectExec","FilterList","Equalizer","onDragEnd","destination","source","vars","fromListId","_ref$2","toListId","toProgress","editProject","fromList","toList","actualIndex","reduce","accum","tableLayout","borderCollapse","col","verticalAlign","ProjectCell_ProjectCell","lId","tId","placement","Fab","reload","logout","names","WeekDay","d1","d2","day","isPast","addHours","withDate","getDate","sort","b","getTime","getFullYear","getMonth","getDay","isDraggingOver","transition","prov","snap","boxStyle","WeekControls","_nav","nav","toggleProject","currIds","withoutAllProjects","num","multiple","setDate","subDays","startDay","NavigateBefore","addDays","NavigateNext","CWeek","dragContainer","overflowX","tasksContainer","filterProjectId","setFilterProjectId","baseDay","setBaseDay","allTasks","weekEmpty","start","getDays","newDay","taskDueDate","diff","differenceInCalendarDays","findNewDate","filteringProjects","CalendarWeek","createMuiTheme","fabStyle","Router","setOpen","loaded","setLoaded","onload","loginWithCookie","print","t0","react_router_dom","bool","Timer","exact","Wrapper","es","react_common_esm","ThemeProvider","src_Router","momentLocalizer","require","Moment","locale","src_Wrapper","getElementById"],"mappings":"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","file":"static/js/main.197dc00c.chunk.js","sourcesContent":["import { TSnackbar } from '../types/state'\r\n\r\nimport { TState } from '../types/state'\r\n\r\nexport const defaultSnackbar: TSnackbar = {\r\n  open: false,\r\n  message: \"YOU CAN'T SEE ME! BAM DAM WHAN CHAM, Boo do do dodo doooo\",\r\n  variant: 'success'\r\n}\r\n\r\nexport const defaultState: TState = {\r\n  user: null,\r\n  pomodoro: {\r\n    paused: true,\r\n    working: true,\r\n    selectingTask: false,\r\n    selectedTaskId: null,\r\n    currSeconds: 60 * 25, // will be reset to startSeconds when they click start either way\r\n    breakSeconds: 60 * 5,\r\n    workSeconds: 60 * 25,\r\n    stopWatch: {\r\n      pastTimes: [],\r\n      time: 0,\r\n      paused: true,\r\n      highest: 0\r\n    }\r\n  },\r\n  snackbar: defaultSnackbar,\r\n  isLoading: false,\r\n  projects: []\r\n}\r\n","import createNextState, { Draft } from 'immer'\r\nimport { Reducer } from 'redux'\r\nimport { TState } from '../../types/state'\r\nimport { TAction, ReducerCases } from '../actions/types'\r\n\r\n/**\r\n * An *case reducer* is a reducer function for a speficic action type. Case\r\n * reducers can be composed to full reducers using `createReducer()`.\r\n *\r\n * Unlike a normal Redux reducer, a case reducer is never called with an\r\n * `undefined` state to determine the initial state. Instead, the initial\r\n * state is explicitly specified as an argument to `createReducer()`.\r\n *\r\n * In addition, a case reducer can choose to mutate the passed-in `state`\r\n * value directly instead of returning a new state. This does not actually\r\n * cause the store state to be mutated directly; instead, thanks to\r\n * [immer](https://github.com/mweststrate/immer), the mutations are\r\n * translated to copy operations that result in a new state.\r\n */\r\nexport type CaseReducer<S = TState, A = TAction> = (\r\n  state: Draft<S>,\r\n  action: A\r\n) => S | void\r\n\r\n/**\r\n * A mapping from action types to case reducers for `createReducer()`.\r\n */\r\n\r\nexport const createReducer = <S = TState>(\r\n  initialState: S,\r\n  actionsMap: ReducerCases<S>\r\n): Reducer<S> => {\r\n  return (state = initialState, action: TAction): S => {\r\n    // @ts-ignore createNextState() produces an Immutable<Draft<S>>\r\n    return createNextState(state, (draft: Draft<S>) => {\r\n      const caseReducer = actionsMap[action.type]\r\n      return caseReducer ? caseReducer(draft as any, action as any) : undefined\r\n    })\r\n  }\r\n}\r\n","import { cloneDeep } from 'lodash'\r\nimport { TProject, TTask, TList } from '../types/project'\r\n\r\nexport const id = (\r\n  arr: Array<any & { id: string }>,\r\n  passedId: string\r\n): number => {\r\n  return arr.findIndex(item => item.id === passedId)\r\n}\r\n\r\nexport const formalize = (str: string): string => {\r\n  return str\r\n    .toLowerCase()\r\n    .replace(/,/g, '')\r\n    .replace(/ /g, '')\r\n}\r\n\r\nexport const filterItemsFromIds = <T = any>(\r\n  ids: number[],\r\n  items: { [id: string]: any } & T // add index signature\r\n): T => {\r\n  const newItems = cloneDeep(items) // changed in past :()\r\n  Object.keys(newItems)\r\n    .map(key => parseInt(key, 10)) // Object.keys returns strings nomatter what\r\n    .forEach((key: any) => {\r\n      if (!ids.includes(key)) {\r\n        delete newItems[key]\r\n      }\r\n    })\r\n  return newItems\r\n}\r\n\r\nexport const getDaysInMonth = (month: number, year: number): Date[] => {\r\n  // Since no month has fewer than 28 days\r\n  const date: Date = new Date(year, month, 1)\r\n  const days: Date[] = []\r\n  while (date.getMonth() === month) {\r\n    days.push(new Date(date))\r\n    date.setDate(date.getDate() + 1)\r\n  }\r\n  return days\r\n}\r\n\r\nexport const getAllTasks = (projects: TProject[]): TTask[] => {\r\n  let tasks: TTask[] = []\r\n\r\n  projects.map(project => {\r\n    tasks = [...tasks, ...project.tasks]\r\n    return\r\n  })\r\n\r\n  return tasks\r\n}\r\n\r\nexport const getAllListsArr = (projects: TProject[]): TList[] => {\r\n  let lists: TList[] = []\r\n\r\n  projects.map(project => {\r\n    lists = [...lists, ...project.lists]\r\n  })\r\n\r\n  return lists\r\n}\r\n\r\nexport const getProjectIdFromTaskId = (\r\n  projects: TProject[],\r\n  taskId: string\r\n): string => {\r\n  let result = ''\r\n\r\n  Object.values(projects).map(proj => {\r\n    Object.values(proj.tasks).map(task => {\r\n      if (task.id === taskId) {\r\n        result = proj.id\r\n      }\r\n      return\r\n    })\r\n  })\r\n\r\n  return result\r\n}\r\n\r\nexport const moveInArray = (element: any, index: number, offset: number) => {\r\n  const newIndex = index + offset\r\n\r\n  const newArr = [...element]\r\n\r\n  if (newIndex > -1 && newIndex < newArr.length) {\r\n    const removedElement = newArr.splice(index, 1)[0]\r\n    newArr.splice(newIndex, 0, removedElement)\r\n  }\r\n\r\n  return newArr\r\n}\r\n","import { ReducerCases } from '../actions/types'\r\nimport { setSubtaskA, setTaskA } from '../actions/task'\r\nimport { tickA } from '../actions/pomodoro'\r\nimport { TProject } from '../../types/project'\r\nimport { id } from '../../utils/utilities'\r\n\r\nconst SET_TASK = (\r\n  projects: TProject[],\r\n  action: ReturnType<typeof setTaskA>\r\n) => {\r\n  const project = projects[id(projects, action.projectId)]\r\n  const tasks = project.tasks\r\n  if (action.newTask === null) {\r\n    // REFERENCE CLEANUP\r\n\r\n    project.lists.map(list => {\r\n      if (list.taskIds.includes(action.id)) {\r\n        list.taskIds.splice(list.taskIds.indexOf(action.id), 1)\r\n      }\r\n    })\r\n\r\n    project.tasks.splice(project.tasks.findIndex(tsk => tsk.id === action.id))\r\n  } else {\r\n    tasks[id(tasks, action.id)] = {\r\n      ...action.newTask\r\n    }\r\n  }\r\n}\r\n\r\nconst SET_SUBTASK = (projects: TProject[], action: ReturnType<typeof setSubtaskA>) => {\r\n  const project = projects[id(projects, action.projectId)]\r\n  const task = project.tasks[id(project.tasks, action.taskId)]\r\n\r\n  task.subTasks[id(task.subTasks, action.id)] = action.newSubtask\r\n  project.tasks[id(project.tasks, action.taskId)] = task\r\n}\r\n// const SET_COLUMN = () => {}\r\n\r\nconst TICK = (projects: TProject[], action: ReturnType<typeof tickA>) => {\r\n  if (action.taskId && action.projectId) {\r\n    const proj = projects[id(projects, action.projectId)]\r\n    proj.tasks[id(proj.tasks, action.taskId)].timeWorkedOn += 1\r\n  }\r\n}\r\n\r\nexport const taskCases = {\r\n  TICK,\r\n  SET_TASK,\r\n  SET_SUBTASK\r\n} as ReducerCases<TProject[]>\r\n","import { TProject } from '../../types/project'\r\nimport { defaultState } from '../defaultState'\r\nimport { createReducer } from './createReducer'\r\nimport { TState } from '../../types/state'\r\nimport { setProjectA, setProjectsA } from '../actions/project'\r\nimport { setListA } from '../actions/list'\r\nimport { ReducerCases } from '../actions/types'\r\nimport { taskCases } from './tasks'\r\nimport { id } from '../../utils/utilities'\r\n\r\nconst SET_PROJECT = (\r\n  projects: TProject[],\r\n  action: ReturnType<typeof setProjectA>\r\n) => {\r\n  if (action.project) {\r\n    projects[id(projects, action.id)] = action.project\r\n  } else {\r\n    delete projects[id(projects, action.id)]\r\n  }\r\n}\r\n\r\nconst SET_LIST = (\r\n  projects: TProject[],\r\n  action: ReturnType<typeof setListA>\r\n) => {\r\n  const changing = projects[id(projects, action.projectId)].lists\r\n\r\n  if (action.newList) {\r\n    changing.push({\r\n      taskIds: action.newList.taskIds || [],\r\n      name: action.newList.name || 'List',\r\n      id: action.id,\r\n    })\r\n  } else {\r\n    changing.splice(id(changing, action.id), 1)\r\n  }\r\n}\r\nconst projectCases: ReducerCases<TProject[]> = {\r\n  SET_PROJECT,\r\n  SET_LIST,\r\n  SET_PROJECTS: (projects, action: ReturnType<typeof setProjectsA>) => {\r\n    return action.projects\r\n  }\r\n}\r\n\r\nexport const projectsReducer = createReducer<TState['projects']>(\r\n  defaultState.projects,\r\n  {\r\n    ...projectCases,\r\n    ...taskCases\r\n  } as ReducerCases<TState['projects']>\r\n)\r\n","import {\r\n  selectPomodoroTaskA,\r\n  resetPomodoroA,\r\n  toggleTimerA\r\n} from './../actions/pomodoro'\r\nimport { defaultState } from '../defaultState'\r\nimport { createReducer } from './createReducer'\r\nimport { TState, TPomodoro } from '../../types/state'\r\nimport {\r\n  tickA,\r\n  toggleStopwatchA,\r\n  setLengthA,\r\n  resetStopwatchA,\r\n  setTimeDevA,\r\n  toggleSelectingTaskA\r\n} from '../actions/pomodoro'\r\nimport { ReducerCases } from '../actions/types'\r\n\r\nconst TICK = (pom: TPomodoro, action: ReturnType<typeof tickA>) => {\r\n  if (pom.currSeconds > 0 && !pom.paused) {\r\n    // just a double check\r\n    pom.currSeconds -= 1\r\n  } else {\r\n    pom.paused = true\r\n    pom.working = !pom.working\r\n    pom.currSeconds = !pom.working ? pom.workSeconds : pom.breakSeconds\r\n  }\r\n}\r\nconst TOGGLE_TIMER = (\r\n  pom: TPomodoro,\r\n  action: ReturnType<typeof toggleTimerA>\r\n) => {\r\n  pom.paused = !pom.paused\r\n}\r\n\r\nconst RESET_POMODORO = (\r\n  pomodoro: TPomodoro,\r\n  action: ReturnType<typeof resetPomodoroA>\r\n) => defaultState.pomodoro\r\n\r\nconst SELECT_POMODORO_TASK = (\r\n  pom: TPomodoro,\r\n  action: ReturnType<typeof selectPomodoroTaskA>\r\n) => {\r\n  pom.selectingTask = false\r\n\r\n  if (action.taskId === pom.selectedTaskId) {\r\n    pom.selectedTaskId = null // deselect\r\n  } else {\r\n    pom.selectedTaskId = action.taskId\r\n  }\r\n}\r\n\r\nconst TOGGLE_SELECTING_TASK = (\r\n  pom: TPomodoro,\r\n  action: ReturnType<typeof toggleSelectingTaskA>\r\n) => {\r\n  pom.selectingTask = !pom.selectingTask\r\n}\r\n\r\nconst SET_TIME_DEV = (\r\n  pom: TPomodoro,\r\n  action: ReturnType<typeof setTimeDevA>\r\n) => {\r\n  pom.currSeconds = 4\r\n}\r\n\r\nconst TICK_STOPWATCH = (pom: TPomodoro, action: ReturnType<typeof tickA>) => {\r\n  pom.stopWatch.time += 1\r\n  pom.stopWatch.highest = Math.max(pom.stopWatch.time, pom.stopWatch.highest)\r\n}\r\n\r\nconst TOGGLE_STOPWATCH = (\r\n  pom: TPomodoro,\r\n  action: ReturnType<typeof toggleStopwatchA>\r\n) => {\r\n  pom.stopWatch.paused = !pom.stopWatch.paused\r\n}\r\n\r\nconst RESET_STOPWATCH = (\r\n  pom: TPomodoro,\r\n  action: ReturnType<typeof resetStopwatchA>\r\n) => {\r\n  // don't reset highscore!\r\n  pom.stopWatch.time = 0\r\n  pom.stopWatch.paused = true\r\n}\r\n\r\nconst SET_LENGTH_MINUTES = (\r\n  pom: TPomodoro,\r\n  action: ReturnType<typeof setLengthA>\r\n) => {\r\n  const slice = action.operationType === 'WORK' ? 'workSeconds' : 'breakSeconds'\r\n\r\n  const changingCurrent =\r\n    (action.type === 'CHANGE_WORK_TIME' && pom.working) ||\r\n    (action.type === 'CHANGE_BREAK_TIME' && !pom.working)\r\n\r\n  const result = pom[slice] + action.minutes * 60\r\n\r\n  if (result >= 0) {\r\n    const newSeconds = changingCurrent\r\n      ? pom.currSeconds + action.minutes * 60\r\n      : pom.currSeconds\r\n\r\n    pom.currSeconds = newSeconds\r\n    pom[slice] = result\r\n  }\r\n}\r\n\r\nexport const pomodoroReducer = createReducer<TState['pomodoro']>(\r\n  defaultState.pomodoro,\r\n  {\r\n    TICK,\r\n    TOGGLE_TIMER,\r\n    SET_LENGTH_MINUTES,\r\n    RESET_POMODORO,\r\n    SELECT_POMODORO_TASK,\r\n    TOGGLE_SELECTING_TASK,\r\n    SET_TIME_DEV,\r\n    TICK_STOPWATCH,\r\n    TOGGLE_STOPWATCH,\r\n    RESET_STOPWATCH\r\n  } as ReducerCases<TState['pomodoro']>\r\n)\r\n","import { ReducerCases } from '../actions/types'\r\nimport { defaultState } from '../defaultState'\r\nimport { createReducer } from './createReducer'\r\nimport { TAuthUser, TState } from '../../types/state'\r\nimport { TRegister, TLogin } from '../actions/auth'\r\n\r\nconst REGISTER = (user: TAuthUser, action: TRegister) => {\r\n  return action.user\r\n}\r\nconst LOGIN = (user: TAuthUser, action: TLogin) => {\r\n  return action.user\r\n}\r\n\r\nconst userCases: ReducerCases<TState['user']> = {\r\n  REGISTER,\r\n  LOGIN\r\n}\r\n\r\n/** tags will be stored in a store, tasks can select tags */\r\nexport const userReducer = createReducer<TState['user']>(\r\n  defaultState.user,\r\n  userCases\r\n)\r\n","import { projectsReducer } from './projects'\r\nimport { pomodoroReducer } from './pomodoro'\r\nimport { TAction } from '../actions/types'\r\nimport { Reducer, combineReducers } from 'redux'\r\nimport { TState } from '../../types/state'\r\nimport { ReducerCases } from '../actions/types'\r\nimport { createReducer } from './createReducer'\r\nimport { TStartLoading, TStopLoading } from '../actions/loading'\r\nimport { TOpenSnackbar } from '../actions/snackbar'\r\nimport { defaultState } from '../defaultState'\r\nimport { userReducer } from './user'\r\n\r\nconst snackbarReducers: ReducerCases<TState['snackbar']> = {\r\n  OPEN_SNACKBAR: (state, action: TOpenSnackbar) => {\r\n    state.open = true\r\n    state.message = action.message\r\n    state.variant = action.variant\r\n  },\r\n  CLOSE_SNACKBAR: (state, action) => {\r\n    state.open = false\r\n  }\r\n}\r\n\r\nexport const snackbarReducer = createReducer<TState['snackbar']>(\r\n  defaultState.snackbar,\r\n  snackbarReducers\r\n)\r\n\r\nconst loadingReducers: ReducerCases<boolean> = {\r\n  START_LOADING: (state, action: TStartLoading) => true,\r\n  STOP_LOADING: (state, action: TStopLoading) => false\r\n}\r\n\r\nconst loadingReducer = createReducer<boolean>(false, loadingReducers)\r\n\r\nexport const reducer: Reducer<TState, TAction> = combineReducers({\r\n  isLoading: loadingReducer,\r\n  snackbar: snackbarReducer,\r\n  projects: projectsReducer,\r\n  pomodoro: pomodoroReducer,\r\n  user: userReducer\r\n})\r\n","import { createStore, applyMiddleware, Store } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport { reducer } from './reducers/reducer'\r\nimport { defaultState } from './defaultState'\r\nimport { TState } from '../types/state'\r\nimport { TAction } from './actions/types'\r\nimport invariant from 'redux-immutable-state-invariant'\r\n\r\nconst actionCreators: any[] = []\r\n\r\nconst composeEnhancers = composeWithDevTools({\r\n  actionCreators,\r\n  trace: true,\r\n  traceLimit: 100\r\n})\r\n\r\nexport const store: Store<TState, TAction> = createStore(\r\n  reducer,\r\n  defaultState,\r\n  composeEnhancers(applyMiddleware(invariant(), thunk))\r\n)\r\n","export const toggleTimerA = () => ({ type: 'TOGGLE_TIMER' })\r\n\r\nexport const setLengthA = (args: {\r\n  type: 'BREAK' | 'WORK'\r\n  byMinutes: number\r\n}) => ({\r\n  type: 'SET_LENGTH_MINUTES',\r\n  operationType: args.type,\r\n  minutes: args.byMinutes\r\n})\r\n\r\nexport const tickA = (args: { taskId?: string; projectId?: string }) => ({\r\n  type: 'TICK',\r\n  taskId: args.taskId,\r\n  projectId: args.projectId\r\n})\r\n\r\nexport const resetPomodoroA = () => ({ type: 'RESET_POMODORO' })\r\n\r\nexport const selectPomodoroTaskA = (taskId: null | string) => ({\r\n  type: 'SELECT_POMODORO_TASK',\r\n  taskId\r\n})\r\n\r\nexport const toggleSelectingTaskA = () => ({\r\n  type: 'TOGGLE_SELECTING_TASK'\r\n})\r\n\r\nexport const setTimeDevA = () => ({\r\n  type: 'SET_TIME_DEV'\r\n})\r\n\r\nexport const tickStopwatchA = () => ({\r\n  type: 'TICK_STOPWATCH'\r\n})\r\n\r\nexport const toggleStopwatchA = () => ({\r\n  type: 'TOGGLE_STOPWATCH'\r\n})\r\n\r\nexport const resetStopwatchA = () => ({\r\n  type: 'RESET_STOPWATCH'\r\n})\r\n\r\nexport type PomodoroAction =\r\n  | ReturnType<typeof toggleTimerA>\r\n  | ReturnType<typeof setLengthA>\r\n  | ReturnType<typeof tickA>\r\n  | ReturnType<typeof resetPomodoroA>\r\n  | ReturnType<typeof selectPomodoroTaskA>\r\n  | ReturnType<typeof toggleSelectingTaskA>\r\n  | ReturnType<typeof setTimeDevA>\r\n  | ReturnType<typeof tickStopwatchA>\r\n  | ReturnType<typeof toggleStopwatchA>\r\n  | ReturnType<typeof resetStopwatchA>\r\n","export const toDaysHHMMSS = (s: number, verbose?: true): string => {\r\n  let result = ''\r\n\r\n  const days = Math.floor(s / 86400)\r\n  s -= days * 86400\r\n  if (days) {\r\n    result += `${days} Day${days !== 1 ? 's ' : ' '}`\r\n  }\r\n\r\n  if (verbose) {\r\n    const hours = Math.floor(s / 3600)\r\n    s -= hours * 3600\r\n    if (hours > 0) {\r\n      result += `${hours} Hour${hours !== 1 ? 's ' : ' '}`\r\n    }\r\n    const minutes = Math.floor(s / 60)\r\n    s -= minutes * 60\r\n    if (minutes > 0) {\r\n      result += `${minutes} Minute${minutes !== 1 ? 's ' : ' '}`\r\n    }\r\n    if (hours < 1 && s > 0) {\r\n      result += `${s} second${s !== 1 ? 's' : ''}`\r\n    }\r\n  } else {\r\n    const measuredTime = new Date(null as any)\r\n    measuredTime.setSeconds(s)\r\n\r\n    result += measuredTime.toISOString().slice(11, 19) // 8:43:32\r\n    if (result.slice(0, 2) === '00') {\r\n      result = result.slice(3)\r\n    } else if (result.slice(0, 1) === '0') {\r\n      result = result.slice(1)\r\n    }\r\n  }\r\n  return result // 2 days, 8:43:32\r\n}\r\n","import React from 'react'\r\nimport { setLengthA } from '../../store/actions/pomodoro'\r\nimport { connect } from 'react-redux'\r\nimport { TState } from '../../types/state'\r\nimport { Button } from '@material-ui/core'\r\nimport { Add, Remove } from '@material-ui/icons'\r\nimport { toDaysHHMMSS } from '../../utils/convertToTime'\r\n\r\ntype TProps = ReturnType<typeof mapState> & typeof actionCreators\r\n\r\nconst CControls = (props: TProps) => {\r\n  const { workTime, breakTime } = props\r\n\r\n  return (\r\n    <>\r\n      <div style={{ textAlign: 'center', fontSize: 18, margin: 10 }}>\r\n        Break Time: {toDaysHHMMSS(breakTime)}\r\n      </div>\r\n      <div style={{ display: 'flex' }}>\r\n        <Button\r\n          onClick={() => props.setLengthA({ type: 'BREAK', byMinutes: 1 })}\r\n          color=\"secondary\"\r\n          style={{ width: '100%', marginLeft: 8, marginRight: 4 }}\r\n        >\r\n          <Add />\r\n        </Button>\r\n        <Button\r\n          onClick={() => props.setLengthA({ type: 'BREAK', byMinutes: -1 })}\r\n          color=\"primary\"\r\n          fullWidth\r\n          style={{ width: '100%', marginLeft: 4, marginRight: 8 }}\r\n        >\r\n          <Remove />\r\n        </Button>\r\n      </div>\r\n      <div\r\n        style={{\r\n          textAlign: 'center',\r\n          fontSize: 18,\r\n          margin: 10\r\n        }}\r\n      >\r\n        Work Time: {toDaysHHMMSS(workTime)}\r\n      </div>\r\n      <div style={{ display: 'flex' }}>\r\n        <Button\r\n          onClick={() => props.setLengthA({ type: 'WORK', byMinutes: 5 })}\r\n          color=\"secondary\"\r\n          style={{ width: '100%', marginLeft: 8, marginRight: 4 }}\r\n        >\r\n          <Add />\r\n        </Button>\r\n        <Button\r\n          onClick={() => props.setLengthA({ type: 'WORK', byMinutes: -5 })}\r\n          color=\"primary\"\r\n          fullWidth\r\n          style={{ width: '100%', marginLeft: 4, marginRight: 8 }}\r\n        >\r\n          <Remove />\r\n        </Button>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapState = (state: TState) => ({\r\n  workTime: state.pomodoro.workSeconds,\r\n  breakTime: state.pomodoro.breakSeconds\r\n})\r\n\r\nconst actionCreators = {\r\n  setLengthA\r\n}\r\n\r\nexport const Controls = connect(\r\n  mapState,\r\n  actionCreators\r\n)(CControls)\r\n","import React from 'react'\r\nimport { Button, Paper } from '@material-ui/core'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  resetPomodoroA,\r\n  setTimeDevA,\r\n  toggleSelectingTaskA\r\n} from '../../store/actions/pomodoro'\r\nimport { TState } from '../../types/state'\r\nimport { getAllTasks, id } from '../../utils/utilities'\r\n\r\ntype OwnProps = {\r\n  toggleWorking: () => void\r\n  timeLeft: string\r\n}\r\n\r\ntype TProps = ReturnType<typeof mapState> & typeof actionCreators & OwnProps\r\n\r\nconst CDisplay = (props: TProps) => {\r\n  const { pomodoro, timeLeft } = props\r\n  const buttonText = `${pomodoro.paused ? 'Start' : 'Stop'} ${\r\n    pomodoro.working ? 'Work' : 'Break'\r\n  }`\r\n  return (\r\n    <div style={{ margin: 10 }}>\r\n      <div\r\n        style={{\r\n          color: pomodoro.working ? 'red' : 'green',\r\n          textAlign: 'center',\r\n          fontSize: 24\r\n        }}\r\n      >\r\n        {timeLeft}\r\n      </div>\r\n      <Paper\r\n        style={{\r\n          minHeight: 36,\r\n          marginBottom: 10,\r\n          marginTop: 5,\r\n          backgroundColor: 'white',\r\n          padding: 10\r\n        }}\r\n      >\r\n        <p style={{ display: 'inline', fontSize: 20 }}>\r\n          {pomodoro.selectingTask\r\n            ? 'Selecting Task...'\r\n            : pomodoro.selectedTaskId\r\n            ? props.tasks[id(props.tasks, pomodoro.selectedTaskId!)].name\r\n            : 'Select Task'\r\n          /* ? tasks[pomodoro.selectedTaskId].name : 'No Task Selected'} */\r\n          }\r\n        </p>\r\n        <Button\r\n          color=\"secondary\"\r\n          style={{ float: 'right', marginLeft: 5 }}\r\n          onClick={() => props.toggleSelectingTask()}\r\n        >\r\n          {pomodoro.selectingTask\r\n            ? 'Cancel'\r\n            : 'Select ' + (pomodoro.selectedTaskId ? 'New' : '')}\r\n        </Button>\r\n        <p>\r\n          {pomodoro.selectedTaskId && !pomodoro.selectingTask\r\n            ? '' // toDaysHHMMSS(tasks[pomodoro.selectedTaskId].timeWorkedOn)\r\n            : ''}\r\n        </p>\r\n      </Paper>\r\n      <div style={{ display: 'flex' }}>\r\n        <Button\r\n          onClick={props.toggleWorking}\r\n          color=\"primary\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n        >\r\n          {buttonText}\r\n        </Button>\r\n        <div style={{ width: 8 }} />\r\n        <Button onClick={props.reset} color=\"secondary\" fullWidth>\r\n          Reset\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapState = (state: TState) => ({\r\n  pomodoro: state.pomodoro,\r\n  tasks: getAllTasks(state.projects)\r\n})\r\n\r\nconst actionCreators = {\r\n  reset: resetPomodoroA,\r\n  toggleSelectingTask: toggleSelectingTaskA,\r\n  setTimeDev: setTimeDevA\r\n}\r\n\r\nexport const Display = connect(\r\n  mapState,\r\n  actionCreators\r\n)(CDisplay)\r\n","import { CSSProperties } from 'react'\r\n\r\nexport const centerChildren: CSSProperties = {\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  textAlign: 'center'\r\n}\r\n","import React, { CSSProperties, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { TState } from '../../types/state'\r\nimport { toDaysHHMMSS } from '../../utils/convertToTime'\r\nimport {\r\n  tickStopwatchA,\r\n  toggleStopwatchA,\r\n  resetStopwatchA\r\n} from '../../store/actions/pomodoro'\r\nimport { Button } from '@material-ui/core'\r\nimport { Transition } from 'react-spring/renderprops'\r\nimport { centerChildren } from '../styles/utils'\r\nimport { PlayArrow, Pause } from '@material-ui/icons'\r\n\r\ntype TProps = ReturnType<typeof mapState> & typeof actionCreators\r\n\r\nlet interval: NodeJS.Timeout = setInterval(() => null, Infinity)\r\n\r\nconst CStopwatch = (props: TProps) => {\r\n  useEffect(() => {\r\n    clearInterval(interval)\r\n\r\n    interval = setInterval(() => {\r\n      if (!props.stopWatch.paused) {\r\n        props.tickStopwatch()\r\n      }\r\n    }, 1000)\r\n  })\r\n\r\n  const { stopWatch, reset } = props\r\n  return (\r\n    <div style={{ margin: 10 }}>\r\n      <div\r\n        style={{\r\n          textAlign: 'center',\r\n          fontSize: 28,\r\n          marginBottom: 10,\r\n          color: stopWatch.time >= stopWatch.highest ? '#FFD700' : 'black'\r\n        }}\r\n      >\r\n        {toDaysHHMMSS(stopWatch.time)}\r\n      </div>\r\n      <Transition\r\n        items={stopWatch.time < stopWatch.highest}\r\n        from={{ opacity: 0 }}\r\n        enter={{ opacity: 1 }}\r\n        leave={{ opacity: 0 }}\r\n      >\r\n        {show => {\r\n          const style: CSSProperties = {\r\n            fontSize: 28,\r\n            color: '#444',\r\n            marginBottom: 10\r\n          }\r\n          return (\r\n            show &&\r\n            (transitionStyles => (\r\n              <div style={{ ...style, ...transitionStyles, ...centerChildren }}>\r\n                Best: {toDaysHHMMSS(stopWatch.highest)}\r\n              </div>\r\n            ))\r\n          )\r\n        }}\r\n      </Transition>\r\n      <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n        <Button onClick={() => reset()} style={{ marginRight: 4 }}>\r\n          Reset\r\n        </Button>\r\n        <Button onClick={props.toggleStopwatch} color=\"secondary\">\r\n          {stopWatch.paused ? (\r\n            <PlayArrow style={{ marginRight: 4 }} />\r\n          ) : (\r\n            <Pause style={{ marginRight: 4 }} />\r\n          )}\r\n          {stopWatch.paused ? 'Start' : 'Stop'}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapState = (state: TState) => ({\r\n  stopWatch: state.pomodoro.stopWatch\r\n})\r\n\r\nconst actionCreators = {\r\n  tickStopwatch: tickStopwatchA,\r\n  toggleStopwatch: toggleStopwatchA,\r\n  reset: resetStopwatchA\r\n}\r\n\r\nexport const Stopwatch = connect(\r\n  mapState,\r\n  actionCreators\r\n)(CStopwatch)\r\n","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  withStyles,\r\n  createStyles,\r\n  Theme,\r\n  WithStyles,\r\n  DialogTitle,\r\n  IconButton,\r\n  Tabs,\r\n  Tab,\r\n  Card\r\n} from '@material-ui/core'\r\nimport { Close, Settings } from '@material-ui/icons'\r\nimport { toggleTimerA, tickA } from '../../store/actions/pomodoro'\r\nimport { toDaysHHMMSS } from '../../utils/convertToTime'\r\nimport { Swal } from './Swal'\r\nimport { Controls } from './Controls'\r\nimport { Display } from './Display'\r\nimport { Stopwatch } from './Stopwatch'\r\nimport { TState } from '../../types/state'\r\nimport { getProjectIdFromTaskId, getAllTasks } from '../../utils/utilities'\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    card: {\r\n      position: 'fixed',\r\n      bottom: theme.spacing(4),\r\n      outline: 'none',\r\n      left: theme.spacing(4),\r\n      maxWidth: 700,\r\n      minWidth: 300,\r\n      zIndex: 1099,\r\n      backgroundColor: '#f2f2f2'\r\n    },\r\n    closeButton: {\r\n      position: 'absolute',\r\n      right: theme.spacing(1),\r\n      top: theme.spacing(1),\r\n      color: theme.palette.grey[500]\r\n    }\r\n  })\r\n// i do not\r\ninterface OwnProps {\r\n  open: boolean\r\n  stateFunc(next: boolean): void\r\n}\r\ntype TProps = ReturnType<typeof mapState> &\r\n  typeof actionCreators &\r\n  OwnProps &\r\n  WithStyles<typeof styles>\r\n\r\nlet interval: NodeJS.Timeout = setInterval(() => null, Infinity)\r\n\r\nconst CPomodoro = (props: TProps) => {\r\n  const [tab, setTab] = useState(0)\r\n\r\n  const pomodoro = props.pomodoro\r\n\r\n  React.useEffect(() => {\r\n    clearInterval(interval)\r\n\r\n    interval = setInterval(() => {\r\n      if (!pomodoro.paused) {\r\n        if (pomodoro.selectedTaskId && pomodoro.working) {\r\n          props.tick({\r\n            taskId: pomodoro.selectedTaskId,\r\n            projectId: getProjectIdFromTaskId(\r\n              props.projects,\r\n              pomodoro.selectedTaskId\r\n            )\r\n          })\r\n        } else {\r\n          props.tick({})\r\n        }\r\n      }\r\n\r\n      // set tab title\r\n\r\n      document.title = pomodoro.paused\r\n        ? 'Mantella'\r\n        : `${pomodoro.working ? 'Work ' : 'Break '} ${toDaysHHMMSS(\r\n            pomodoro.currSeconds - 1\r\n          )}`\r\n    }, 1000)\r\n  })\r\n\r\n  const toggleWorking = () => {\r\n    props.toggleTimer()\r\n  }\r\n\r\n  const { open, classes, stateFunc } = props\r\n  const time = toDaysHHMMSS(pomodoro.currSeconds)\r\n\r\n  Swal(pomodoro, stateFunc, () => toggleWorking())\r\n\r\n  return (\r\n    <div>\r\n      {open && (\r\n        <Card className={classes.card}>\r\n          <DialogTitle>Pomodoro</DialogTitle>\r\n          <IconButton\r\n            className={classes.closeButton}\r\n            onClick={() => stateFunc(false)}\r\n          >\r\n            <Close />\r\n          </IconButton>\r\n          {tab === 0 && (\r\n            <Display toggleWorking={() => toggleWorking()} timeLeft={time} />\r\n          )}\r\n          {tab === 1 && <Controls />}\r\n          {tab === 2 && <Stopwatch />}\r\n          <Tabs value={tab} onChange={(e, v: number) => setTab(v)}>\r\n            <Tab label=\"Clock\" />\r\n            <Tab icon={<Settings />} />\r\n            <Tab label=\"Stopwatch\" />\r\n          </Tabs>\r\n        </Card>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapState = (state: TState) => ({\r\n  pomodoro: state.pomodoro,\r\n  projects: state.projects,\r\n  tasks: getAllTasks(state.projects)\r\n})\r\n\r\nconst actionCreators = {\r\n  toggleTimer: toggleTimerA,\r\n  tick: tickA\r\n}\r\n\r\nexport const Pomodoro = connect(\r\n  mapState,\r\n  actionCreators\r\n)(withStyles(styles)(CPomodoro))\r\n","import { TPomodoro } from '../../types/state'\r\nimport Dialog from 'sweetalert'\r\n\r\nconst WORK_DONE_MESSAGE =\r\n  'Take a break! Make some chili! Good job kiddo, really proud of you man <3'\r\nconst BREAK_DONE_MESSAGE =\r\n  'You fat, obese, loser, good people do not need breaks, they are more productive than you. I mean, what the heck were you even doing? Watching a dumb movie, a youtube video about how container ships work, come on man.'\r\n\r\nexport const Swal = (\r\n  pomodoro: TPomodoro,\r\n  stateFunc: (b: boolean) => void,\r\n  toggleWorking: () => void\r\n) => {\r\n  if (pomodoro.currSeconds === 0) {\r\n    const toggleButtonText = `Start ${pomodoro.working ? 'Break' : 'Working'}`\r\n    const title = `${pomodoro.working ? 'Work' : 'Break'} Completed`\r\n    const text = pomodoro.working ? WORK_DONE_MESSAGE : BREAK_DONE_MESSAGE\r\n    const icon = pomodoro.working ? 'success' : 'warning'\r\n    Dialog({\r\n      title,\r\n      text,\r\n      icon,\r\n      // value is passed to .then\r\n      buttons: {\r\n        stop: { text: 'Stop Pomodoro', value: 'stop' },\r\n        toggle: {\r\n          text: toggleButtonText,\r\n          value: 'toggle'\r\n        }\r\n      }\r\n      // .then will return what button they clicked\r\n    }).then((value: 'stop' | 'toggle') => {\r\n      switch (value) {\r\n        case 'stop':\r\n          stateFunc(false)\r\n          break\r\n        case 'toggle':\r\n          toggleWorking()\r\n          break\r\n        default:\r\n          break\r\n      }\r\n    })\r\n  }\r\n}\r\n","import { createStyles, Theme } from '@material-ui/core'\r\n\r\nexport const formStyles = (theme: Theme) =>\r\n  createStyles({\r\n    layout: {\r\n      width: 'auto',\r\n      [theme.breakpoints.up(524)]: {\r\n        width: 500,\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto'\r\n      }\r\n    },\r\n    paper: {\r\n      marginTop: 8,\r\n      display: 'flex',\r\n      flexDirection: 'column', // prevent all from being on one line\r\n      alignItems: 'center',\r\n      padding: `${theme.spacing(2, 3, 3)}`\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      width: 48,\r\n      height: 48,\r\n      backgroundColor: theme.palette.secondary.main\r\n    },\r\n    submit: {\r\n      marginTop: theme.spacing(3)\r\n    }\r\n  })\r\n","import { TVariant } from '../../types/state'\r\n\r\nexport type TOpenSnackbar = {\r\n  type: 'OPEN_SNACKBAR'\r\n  message: string\r\n  variant: TVariant\r\n}\r\nexport type TCloseSnackbar = { type: 'CLOSE_SNACKBAR' }\r\n\r\nexport type SnackbarAction = TOpenSnackbar | TCloseSnackbar\r\n\r\nexport const closeSnackbarA = (): TCloseSnackbar => ({\r\n  type: 'CLOSE_SNACKBAR'\r\n})\r\n\r\nexport const openSnackbarA = (\r\n  message: string,\r\n  variant: TVariant\r\n): TOpenSnackbar => ({\r\n  type: 'OPEN_SNACKBAR',\r\n  message,\r\n  variant\r\n})\r\n","import { TProject } from './../../types/project'\r\n\r\nexport const setProjectsA = (projects: TProject[]) => ({\r\n  type: 'SET_PROJECTS',\r\n  projects\r\n})\r\n\r\nexport const setProjectA = (args: {\r\n  id: string\r\n  newProj: TProject | null\r\n}) => ({\r\n  type: 'SET_PROJECT',\r\n  id: args.id,\r\n  project: args.newProj\r\n})\r\n\r\nexport const selectMemberA = (args: { projectId: string; id: string }) => ({\r\n  type: 'SELECT_MEMBER',\r\n  id: args.id,\r\n  projectId: args.projectId\r\n})\r\n\r\nexport type ProjectAction =\r\n  | ReturnType<typeof setProjectsA>\r\n  | ReturnType<typeof setProjectA>\r\n  | ReturnType<typeof selectMemberA>\r\n","import { UserFieldsFragment } from './../graphql/types'\r\nimport { TState } from '../types/state'\r\nimport { RTDispatch } from '../types/types'\r\nimport axios from 'axios'\r\nimport { setProjectsA } from '../store/actions/project'\r\n\r\n/**\r\n * occurs when user authenticates\r\n */\r\n\r\nexport const fetchQuery = async <T = any>(\r\n  queryString: string,\r\n  variables?: T\r\n) => {\r\n  const axiosFunc = await axios.post(\r\n    `/graphql`,\r\n    {\r\n      query: queryString,\r\n      variables\r\n    },\r\n    { withCredentials: true }\r\n  )\r\n\r\n  const data = await axiosFunc.data\r\n\r\n  return data.data\r\n}\r\n\r\nexport const initializeAuthState = (user: UserFieldsFragment) => {\r\n  return (dispatch: RTDispatch, getState: () => TState) => {\r\n    if (user && user.projects) {\r\n      dispatch(setProjectsA(user.projects))\r\n    }\r\n  }\r\n}\r\n","import { UserFieldsFragment } from './../../graphql/types'\r\nimport { RTDispatch } from '../../types/types'\r\nimport { TState, TAuthUser } from '../../types/state'\r\nimport { openSnackbarA } from './snackbar'\r\nimport { initializeAuthState } from '../../API/initialize'\r\n\r\nexport const transformUser = (user: UserFieldsFragment): TAuthUser => ({\r\n  username: user.username,\r\n  profileImg: user.profileImg || '',\r\n  joinedIds: user.projects.map(proj =>\r\n    typeof proj === 'string' ? proj : (proj.id as string)\r\n  ),\r\n  id: user.id as string,\r\n  email: user.email\r\n})\r\n\r\nexport const registerA = (user: UserFieldsFragment) => {\r\n  return (dispatch: RTDispatch, getState: () => TState) => {\r\n    if (user) {\r\n      const authUser = transformUser(user)\r\n\r\n      dispatch(openSnackbarA('Registered! Welcome To Mantella!', 'success'))\r\n\r\n      dispatch({ type: 'REGISTER', user: authUser })\r\n\r\n      dispatch(initializeAuthState(user))\r\n    } else {\r\n      dispatch(openSnackbarA('Could not Register', 'error'))\r\n    }\r\n  }\r\n}\r\n\r\nexport const loginA = (user: UserFieldsFragment) => {\r\n  return (dispatch: RTDispatch, getState: () => TState) => {\r\n    if (user) {\r\n      const authUser = transformUser(user)\r\n\r\n      dispatch({ type: 'LOGIN', user: authUser })\r\n      dispatch(openSnackbarA('Logged in Successfully', 'success'))\r\n\r\n      dispatch(initializeAuthState(user))\r\n    } else {\r\n      dispatch(openSnackbarA('Could not Login', 'error'))\r\n    }\r\n  }\r\n}\r\n\r\nexport type TRegister = {\r\n  type: 'REGISTER'\r\n  user: TAuthUser\r\n}\r\n\r\nexport type TLogin = {\r\n  type: 'LOGIN'\r\n  user: TAuthUser\r\n}\r\nexport type UserAction = TRegister | TLogin\r\n","import gql from 'graphql-tag'\r\n\r\nexport type GQLExec = <T>(variables: T) => any\r\n\r\nexport const taskFields = gql`\r\n  fragment taskFields on Task {\r\n    points\r\n\r\n    progress\r\n\r\n    id\r\n    dueDate\r\n    color\r\n    subTasks {\r\n      name\r\n      completed\r\n      id\r\n    }\r\n    recurrance {\r\n      interval\r\n      nextDue\r\n    }\r\n    comments {\r\n      id\r\n      comment\r\n      dateAdded\r\n      lastEdited\r\n    }\r\n    timeWorkedOn\r\n    name\r\n  }\r\n`\r\n\r\nexport const profileFields = gql`\r\n  fragment ProfileFields on Profile {\r\n    id\r\n    profileImg\r\n    username\r\n    email\r\n    projects\r\n  }\r\n`\r\n\r\nexport const listFields = gql`\r\n  fragment listFields on List {\r\n    id\r\n    name\r\n    taskIds\r\n  }\r\n`\r\n\r\nexport const projectFields = gql`\r\n  ${taskFields}\r\n  ${listFields}\r\n  fragment projectFields on Project {\r\n    security {\r\n      public\r\n      assignedUsers\r\n    }\r\n    ownerId\r\n    lists {\r\n      ...listFields\r\n    }\r\n\r\n    users\r\n    tasks {\r\n      ...taskFields\r\n    }\r\n    id\r\n    name\r\n  }\r\n`\r\n\r\nexport const userFields = gql`\r\n  ${projectFields}\r\n  fragment userFields on User {\r\n    id\r\n    profileImg\r\n    username\r\n    email\r\n    projects {\r\n      ...projectFields\r\n    }\r\n  }\r\n`\r\n","import gql from 'graphql-tag'\r\nimport { userFields } from '../fragments'\r\n\r\nexport const GQL_LOGIN = gql`\r\n  ${userFields}\r\n  mutation login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      user {\r\n        ...userFields\r\n      }\r\n    }\r\n  }\r\n`\r\nexport const GQL_REGISTER = gql`\r\n  ${userFields}\r\n  mutation register($username: String!, $password: String!, $email: String!) {\r\n    register(username: $username, password: $password, email: $email) {\r\n      user {\r\n        ...userFields\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const GQL_LOGIN_WITH_COOKIE = gql`\r\n  ${userFields}\r\n  mutation loginWithCookie {\r\n    loginWithCookie {\r\n      user {\r\n        ...userFields\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const GQL_LOGOUT = gql`\r\n  mutation logout {\r\n    logout {\r\n      message\r\n    }\r\n  }\r\n`\r\n\r\nexport const GQL_LOGIN_AS_GUEST = gql`\r\n  ${userFields}\r\n  mutation loginAsGuest {\r\n    loginAsGuest {\r\n      user {\r\n        ...userFields\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  Button,\r\n  withStyles,\r\n  WithStyles,\r\n  Avatar,\r\n  Typography,\r\n  IconButton,\r\n  TextField,\r\n  CircularProgress\r\n} from '@material-ui/core'\r\nimport { LockOpen } from '@material-ui/icons'\r\nimport { formStyles } from '../styles/formStyles'\r\nimport { openSnackbarA } from '../../store/actions/snackbar'\r\nimport { Link } from 'react-router-dom'\r\nimport Helmet from 'react-helmet'\r\nimport { registerA, loginA } from '../../store/actions/auth'\r\nimport { Mutation, MutationResult } from 'react-apollo'\r\nimport {\r\n  MutationResolvers,\r\n  RegisterMutation,\r\n  LoginMutation\r\n} from '../../graphql/types'\r\nimport { GQL_REGISTER, GQL_LOGIN } from '../../graphql/mutations/auth'\r\n\r\ntype OwnProps = {\r\n  authType: 'Register' | 'Login'\r\n}\r\n// I <3 Mantella\r\ntype TProps = WithStyles<typeof formStyles> & typeof actionCreators & OwnProps\r\n\r\nconst Auth = ({ authType, openSnackbar, classes, register, login }: TProps) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmText, setConfirmText] = useState('')\r\n  const [username, setUsername] = useState('')\r\n\r\n  return (\r\n    <div style={{ margin: 20 }}>\r\n      <Helmet>\r\n        <style type=\"text/css\">{` body { background-color: #1d364c; }`}</style>\r\n        <meta\r\n          content=\"Get started with Mantella today, totally free!\"\r\n          name={'description'}\r\n        />\r\n      </Helmet>\r\n      <main className={classes.layout}>\r\n        <Mutation\r\n          onCompleted={(data: any) => {\r\n            if (authType === 'Register') {\r\n              const registerData: RegisterMutation = data\r\n              if (\r\n                registerData !== null &&\r\n                registerData.register !== null &&\r\n                registerData.register.user\r\n              ) {\r\n                register(registerData.register.user)\r\n                window.location.hash =\r\n                  '#/project/' + registerData.register.user.projects[0].id\r\n              } else {\r\n                openSnackbar(\r\n                  'User with that Email already exists, Sorry!',\r\n                  'error'\r\n                )\r\n              }\r\n            } else if (authType === 'Login') {\r\n              if (data && data.login && data.login.user) {\r\n                login(data.login.user)\r\n                window.location.hash = '#/calendar'\r\n              } else {\r\n                openSnackbar('Could not login, oopsie!', 'error')\r\n              }\r\n            }\r\n          }}\r\n          onError={(error: any) => {\r\n            openSnackbar('Could not Authenticate!', 'error')\r\n          }}\r\n          mutation={authType === 'Register' ? GQL_REGISTER : GQL_LOGIN}\r\n        >\r\n          {(\r\n            auth: (args: {\r\n              variables:\r\n                | MutationResolvers.LoginArgs\r\n                | MutationResolvers.RegisterArgs\r\n            }) => any,\r\n            result: MutationResult<LoginMutation & RegisterMutation>\r\n          ) => {\r\n            return (\r\n              <form\r\n                autoComplete=\"on\"\r\n                onSubmit={(e) => {\r\n                  e.preventDefault()\r\n                  if (authType === 'Register') {\r\n                    auth({ variables: { username, password, email } })\r\n                  } else {\r\n                    auth({ variables: { email, password } })\r\n                  }\r\n                }}\r\n              >\r\n                <Paper className={classes.paper}>\r\n                  <Avatar className={classes.avatar}>\r\n                    <LockOpen />\r\n                  </Avatar>\r\n                  <Typography style={{ fontSize: 17 }}>{authType}</Typography>\r\n                  {authType === 'Register' && (\r\n                    <Button\r\n                      component={Link}\r\n                      to=\"/login\"\r\n                      variant=\"outlined\"\r\n                      style={{ marginTop: 10 }}\r\n                    >\r\n                      Login Instead\r\n                    </Button>\r\n                  )}\r\n                  {/* Full Name */}\r\n                  {authType === 'Register' && (\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      required\r\n                      autoComplete=\"off\"\r\n                      onChange={(e) => setUsername(e.target.value)}\r\n                      value={username}\r\n                      label=\"Full Name\"\r\n                    />\r\n                  )}\r\n                  <TextField\r\n                    margin=\"dense\"\r\n                    fullWidth\r\n                    name=\"email\"\r\n                    required\r\n                    autoComplete=\"on\"\r\n                    value={email}\r\n                    onChange={(e) => {\r\n                      setEmail(e.target.value)\r\n                    }}\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                  />\r\n                  {/* password */}\r\n                  <TextField\r\n                    margin=\"dense\"\r\n                    fullWidth\r\n                    required\r\n                    autoComplete=\"on\"\r\n                    label=\"Password\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  />\r\n                  {/* confirm password */}\r\n                  {authType === 'Register' && (\r\n                    <TextField\r\n                      type=\"password\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      required\r\n                      autoComplete=\"off\"\r\n                      label=\"Confirm Password\"\r\n                      error={confirmText !== password}\r\n                      value={confirmText}\r\n                      onChange={(e) => setConfirmText(e.target.value)}\r\n                    />\r\n                  )}\r\n                  {/* submit button */}\r\n                  <Grid\r\n                    container\r\n                    justify=\"center\"\r\n                    style={{ marginTop: '10px' }}\r\n                  >\r\n                    {result.loading && (\r\n                      <CircularProgress style={{ margin: '4px auto' }} />\r\n                    )}\r\n\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      fullWidth\r\n                      disabled={\r\n                        authType === 'Register'\r\n                          ? password.trim() === '' || password !== confirmText\r\n                          : false\r\n                      }\r\n                      type=\"submit\"\r\n                      style={{\r\n                        marginTop: 10\r\n                      }}\r\n                    >\r\n                      {authType}\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid\r\n                    container\r\n                    style={{ marginTop: 15 }}\r\n                    alignContent=\"space-between\"\r\n                  >\r\n                    <IconButton>\r\n                      <img\r\n                        src=\"https://cdn4.iconfinder.com/data/icons/new-google-logo-2015/400/new-google-favicon-512.png\"\r\n                        style={{ height: 50, width: 50 }}\r\n                      />\r\n                    </IconButton>\r\n                    <IconButton style={{ marginLeft: 8 }}>\r\n                      <img\r\n                        src=\"https://cdn4.iconfinder.com/data/icons/social-media-icons-the-circle-set/48/facebook_circle-512.png\"\r\n                        style={{ height: 50, width: 50 }}\r\n                      />\r\n                    </IconButton>\r\n                    <IconButton style={{ marginLeft: 8 }}>\r\n                      <img\r\n                        src=\"https://cdn4.iconfinder.com/data/icons/ionicons/512/icon-social-github-512.png\"\r\n                        style={{ height: 50, width: 50 }}\r\n                      />\r\n                    </IconButton>\r\n                    <IconButton style={{ marginLeft: 8 }}>\r\n                      <img\r\n                        src=\"https://cdn3.iconfinder.com/data/icons/social-icons-5/607/Twitterbird.png\"\r\n                        style={{ height: 50, width: 50 }}\r\n                      />\r\n                    </IconButton>\r\n                  </Grid>\r\n                </Paper>\r\n              </form>\r\n            )\r\n          }}\r\n        </Mutation>\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst actionCreators = {\r\n  openSnackbar: openSnackbarA,\r\n  register: registerA,\r\n  login: loginA\r\n}\r\n\r\nexport const AuthRender = withStyles(formStyles)(\r\n  connect(null, actionCreators)(Auth)\r\n)\r\n","import gql from 'graphql-tag'\r\n\r\nimport { projectFields } from '../fragments'\r\n\r\nexport const GQL_CREATE_PROJECT = gql`\r\n  ${projectFields}\r\n\r\n  mutation createProject($name: String!) {\r\n    createProject(name: $name) {\r\n      ...projectFields\r\n    }\r\n  }\r\n`\r\n\r\nexport const GQL_DELETE_PROJECT = gql`\r\n  mutation deleteProject($id: String!) {\r\n    deleteProject(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nexport const GQL_EDIT_PROJECT = gql`\r\n  ${projectFields}\r\n\r\n  mutation editProject($id: String!, $newProj: ProjectInput!) {\r\n    editProject(newProj: $newProj, id: $id) {\r\n      ...projectFields\r\n    }\r\n  }\r\n`\r\n","import * as React from 'react'\r\n\r\nimport {\r\n  withStyles,\r\n  WithStyles,\r\n  Avatar,\r\n  Typography,\r\n  Button,\r\n  TextField,\r\n  CircularProgress\r\n} from '@material-ui/core'\r\nimport { formStyles } from '../styles/formStyles'\r\nimport { CalendarTodayRounded } from '@material-ui/icons'\r\nimport { connect } from 'react-redux'\r\nimport { Change } from '../../types/types'\r\nimport { TState } from '../../types/state'\r\nimport { useState } from 'react'\r\nimport { openSnackbarA } from '../../store/actions/snackbar'\r\nimport { useMutation } from 'react-apollo'\r\nimport {\r\n  CreateProjectMutation,\r\n  CreateProjectMutationVariables\r\n} from '../../graphql/types'\r\nimport { GQL_CREATE_PROJECT } from '../../graphql/mutations/project'\r\nimport { setProjectA } from '../../store/actions/project'\r\n\r\ntype CreateProjectProps = WithStyles<typeof formStyles> &\r\n  typeof actionCreators &\r\n  ReturnType<typeof mapState>\r\n\r\nconst CCreateProject = (props: CreateProjectProps) => {\r\n  const [name, setName] = useState('')\r\n\r\n  const [createProjectExec, { loading }] = useMutation<\r\n    CreateProjectMutation,\r\n    CreateProjectMutationVariables\r\n  >(GQL_CREATE_PROJECT, {\r\n    onCompleted: ({ createProject }) => {\r\n      if (createProject && createProject.id) {\r\n        props.setProject({\r\n          id: createProject.id,\r\n          newProj: createProject\r\n        })\r\n\r\n        window.location.hash = '#/project/' + createProject!.id\r\n        props.openSnackbar('Project Created Successfully', 'success')\r\n      } else {\r\n        props.openSnackbar('Project Could Not Be Created', 'warning')\r\n      }\r\n    },\r\n    onError: (error: any) => {\r\n      props.openSnackbar('Error when creating project', 'error')\r\n    }\r\n  })\r\n\r\n  const { classes } = props\r\n\r\n  return (\r\n    <>\r\n      <main style={{ margin: 'auto' }} className={classes.layout}>\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault()\r\n\r\n            if (props.user) {\r\n              createProjectExec({\r\n                variables: {\r\n                  name: name || 'Unnamed Project'\r\n                }\r\n              })\r\n            } else {\r\n              props.openSnackbar(\"You havn't logged in, silly goose\", 'warning')\r\n            }\r\n          }}\r\n        >\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <CalendarTodayRounded />\r\n            </Avatar>\r\n            <Typography style={{ fontSize: 17 }}>Create Project</Typography>\r\n            {loading && <CircularProgress style={{ margin: '4px auto' }} />}\r\n            <div style={{ display: 'flex', width: '100%' }}>\r\n              <TextField\r\n                autoFocus\r\n                label=\"Project Name\"\r\n                value={name}\r\n                fullWidth\r\n                onChange={(e: Change) => setName(e.target.value)}\r\n                required\r\n              />\r\n              <div style={{ marginLeft: 12, marginTop: 'auto' }}>\r\n                <Button\r\n                  style={{ marginTop: 'auto' }}\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  type=\"submit\"\r\n                >\r\n                  Create\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </main>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapState = (state: TState) => ({\r\n  user: state.user\r\n})\r\nconst actionCreators = {\r\n  openSnackbar: openSnackbarA,\r\n  setProject: setProjectA\r\n}\r\n\r\nexport const CreateProject = connect(\r\n  mapState,\r\n  actionCreators\r\n)(withStyles(formStyles)(CCreateProject))\r\n","import React from 'react'\r\nimport './styles.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button } from '@material-ui/core'\r\nimport { TState } from '../../types/state'\r\nimport { connect } from 'react-redux'\r\n\r\nconst mapState = (state: TState) => ({\r\n  user: state.user\r\n})\r\n\r\ntype TProps = ReturnType<typeof mapState>\r\n\r\nexport const NoMatch = connect(mapState)((props: TProps) => (\r\n  <div className=\"all\">\r\n    <section className=\"error-container\">\r\n      <span className=\"four\">\r\n        <span className=\"screen-reader-text\">4</span>\r\n      </span>\r\n      <span className=\"zero\">\r\n        <span className=\"screen-reader-text\">0</span>\r\n      </span>\r\n      <span className=\"four\">\r\n        <span className=\"screen-reader-text\">4</span>\r\n      </span>\r\n      <div style={{ marginLeft: 'auto', marginRight: 'auto' }}>\r\n        <Button\r\n          color=\"secondary\"\r\n          style={{ width: 250 }}\r\n          to={props.user ? '/dashboard' : '/'}\r\n          component={Link}\r\n          variant=\"contained\"\r\n        >\r\n          Home\r\n        </Button>\r\n      </div>\r\n    </section>\r\n  </div>\r\n))\r\n","import React from 'react'\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody\r\n} from '@material-ui/core'\r\nimport { Check, Close, Traffic } from '@material-ui/icons'\r\n\r\nconst tableHeadData: string[] = ['Feature', 'Mantella', 'Trello', 'KanbanFlow']\r\n\r\nconst features = [\r\n  // first in array is feature name, second is for Mantella, third is trello, fourth is kanbanFlow\r\n  ['Subtasks', 'CHECK', 'CHECK', 'CHECK'],\r\n  ['UI/UX', 'Material', 'Minimal', 'NO'],\r\n  ['Multiple Projects', 'CHECK', 'CHECK', 'CHECK'],\r\n  ['Filtering', 'CHECK', 'CHECK', 'CHECK'],\r\n  ['Recurring Tasks', 'CHECK', 'CHECK', 'CHECK'],\r\n  ['Collapse Columns', 'CHECK', 'CHECK', 'NO'],\r\n  ['Mobile Friendly', 'WIP', 'CHECK', 'CHECK'],\r\n  ['Attach Photos', 'NO', 'PRO', 'CHECK'],\r\n  ['Comments', 'CHECK', 'NO', 'CHECK'],\r\n  ['Links', 'NO', 'NO', 'CHECK'],\r\n  ['Export as JSON', 'CHECK', 'NO', 'NO']\r\n]\r\n\r\nconst styles = {\r\n  paper: {\r\n    maxWidth: 1000,\r\n    margin: '20px 0',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    padding: 16,\r\n    paddingBottom: 48\r\n  } as React.CSSProperties\r\n}\r\n\r\nexport const FeatureTable = () => (\r\n  <Paper style={styles.paper}>\r\n    <Table>\r\n      <TableHead>\r\n        <TableRow>\r\n          {tableHeadData.map((val, i) => (\r\n            <TableCell key={i}>{val}</TableCell>\r\n          ))}\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {features.map((feature, i) => (\r\n          <TableRow key={i}>\r\n            {feature.map((val, e) => (\r\n              <TableCell key={e}>\r\n                {val === 'CHECK' ? (\r\n                  <Check style={{ color: '#00CC00' }} />\r\n                ) : val === 'NO' ? (\r\n                  <Close style={{ color: '#cc0000' }} />\r\n                ) : val === 'WIP' ? (\r\n                  <Traffic style={{ color: 'orange' }} />\r\n                ) : val === 'PRO' ? (\r\n                  'Premium'\r\n                ) : (\r\n                  val\r\n                )}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </Table>\r\n  </Paper>\r\n)\r\n","import React from 'react'\r\nimport { Icon, Paper } from '@material-ui/core'\r\n\r\nconst galleryOptions = [\r\n  {\r\n    name: 'Dividers',\r\n    description:\r\n      'divide tasks in different task lists or swimlanes for maximum efficiency',\r\n    icon: 'view_quilt'\r\n  },\r\n  {\r\n    name: 'Private tasks',\r\n    description:\r\n      'Not everyone needs access to a task, assign tasks to teams or specific members',\r\n    icon: 'lock'\r\n  },\r\n  {\r\n    name: 'Time tracking',\r\n    description: 'Get detailed statistics of what has been done',\r\n    icon: 'timer'\r\n  },\r\n  {\r\n    name: 'Board settings',\r\n    description: 'Manage members and admins, customize the app',\r\n    icon: 'settings'\r\n  },\r\n  {\r\n    name: 'Targets',\r\n    description:\r\n      'Set goals for certain members, teams, or for the entire project',\r\n    icon: 'check_box'\r\n  },\r\n  {\r\n    name: 'Calendar',\r\n    description:\r\n      'Get an overview of due dates and manage your time accordingly',\r\n    icon: 'calendar_today'\r\n  },\r\n  {\r\n    name: 'Task Board',\r\n    description: 'Get an overview of what has to be done',\r\n    icon: 'view_list'\r\n  },\r\n  {\r\n    name: 'Issue Tracking',\r\n    icon: 'bug_report',\r\n    description: 'Assign importance to tasks and assign bugs to teams'\r\n  },\r\n  {\r\n    name: 'Recurring Tasks',\r\n    icon: 'repeat',\r\n    description: 'Get reminders for tasks that must be done on a routine basis'\r\n  }\r\n]\r\n\r\nexport const FeatureGallery = () => {\r\n  return (\r\n    <Paper style={{ padding: 16, maxWidth: 1000, margin: '12px auto' }}>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'row',\r\n          flexWrap: 'wrap'\r\n        }}\r\n      >\r\n        {galleryOptions.map((galleryOption, i) => (\r\n          <div key={i} style={{ flex: 1, display: 'flex' }}>\r\n            <div\r\n              style={{\r\n                margin: 8,\r\n                minWidth: 250,\r\n                flex: 1,\r\n                borderRadius: 4,\r\n                padding: 8,\r\n                flexDirection: 'column',\r\n                alignItems: 'start',\r\n                justifyContent: 'start'\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  flexDirection: 'row',\r\n                  display: 'flex',\r\n                  alignItems: 'center'\r\n                }}\r\n              >\r\n                <Icon\r\n                  style={{ fontSize: 36, marginRight: 4, color: '#224885' }}\r\n                >\r\n                  {galleryOption.icon}\r\n                </Icon>\r\n                <p style={{ fontWeight: 700, fontSize: 22, color: '#224885' }}>\r\n                  {galleryOption.name}\r\n                </p>\r\n              </div>\r\n              <div style={{ marginTop: 8 }}>{galleryOption.description}</div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Paper>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { withStyles, Theme, createStyles } from '@material-ui/core/styles'\r\nimport { Typography, WithStyles, Button } from '@material-ui/core'\r\nimport { FeatureTable } from './FeatureTable'\r\nimport { Helmet } from 'react-helmet'\r\nimport { FeatureGallery } from './FeatureGallery'\r\nimport { Mutation, MutationResult } from 'react-apollo'\r\nimport { GQL_LOGIN_AS_GUEST } from '../../graphql/mutations/auth'\r\nimport {\r\n  LoginAsGuestMutationVariables,\r\n  LoginAsGuestMutation\r\n} from '../../graphql/types'\r\nimport { loginA } from '../../store/actions/auth'\r\nimport { connect } from 'react-redux'\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    heroContent: {\r\n      minHeight: 200,\r\n      padding: 80,\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n      backgroundColor: '#8080ff',\r\n      position: 'relative',\r\n      flexDirection: 'column'\r\n    },\r\n    heroTitle: {\r\n      fontSize: 64,\r\n      textAlign: 'center'\r\n    },\r\n    kayLink: {\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n      marginTop: 16,\r\n      marginBottom: 16,\r\n      textAlign: 'center',\r\n      minHeight: 368\r\n    },\r\n    title: {\r\n      fontWeight: 700,\r\n      fontSize: '2.75rem',\r\n      zIndex: 2\r\n    },\r\n    description: {\r\n      fontWeight: 400,\r\n      fontSize: '1.25rem',\r\n      marginTop: -40,\r\n      zIndex: 2\r\n    }\r\n  })\r\n\r\ntype TProps = WithStyles<typeof styles> & { login: typeof loginA }\r\n\r\nexport const About = withStyles(styles)(\r\n  connect(null, { login: loginA })((props: TProps) => {\r\n    const { classes } = props\r\n\r\n    return (\r\n      <div>\r\n        <Helmet>\r\n          <style type=\"text/css\">{` body { background-color: #1d364c; } h4 { color: white !important; }`}</style>\r\n          <script\r\n            type=\"text/javascript\"\r\n            src=\"https://platform.linkedin.com/badges/js/profile.js\"\r\n            async\r\n            defer\r\n          />\r\n          <meta\r\n            name=\"description\"\r\n            content=\"Mantella is the most innovative open-source task manager and kanban Board!\"\r\n          />\r\n        </Helmet>\r\n        <div className={classes.heroContent}>\r\n          <div className={classes.title}>Mantella</div>\r\n          <div className={classes.description}>\r\n            Elegant Project Management and Time Tracking\r\n          </div>\r\n          <div style={{ display: 'flex' }}>\r\n            <Mutation\r\n              mutation={GQL_LOGIN_AS_GUEST}\r\n              onCompleted={(data: LoginAsGuestMutation) => {\r\n                props.login(data.loginAsGuest.user)\r\n                window.location.hash =\r\n                  '#/project/' + data.loginAsGuest.user.projects[0].id\r\n              }}\r\n            >\r\n              {(\r\n                auth: (args: {\r\n                  variables: LoginAsGuestMutationVariables\r\n                }) => void,\r\n                result: MutationResult<LoginAsGuestMutation>\r\n              ) => (\r\n                <>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    onClick={() => auth({ variables: {} })}\r\n                    style={{ marginTop: 'auto' }}\r\n                  >\r\n                    Continue as Guest\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </Mutation>\r\n          </div>\r\n        </div>\r\n        <div style={{ margin: '20px 0' }}>\r\n          <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n            The Team\r\n          </Typography>\r\n          <div className={classes.kayLink}>\r\n            <div\r\n              className=\"LI-profile-badge\"\r\n              data-version=\"v1\"\r\n              data-size=\"large\"\r\n              data-locale=\"en_US\"\r\n              data-type=\"vertical\"\r\n              data-theme=\"dark\"\r\n              data-vanity=\"austin-kay-4a823b139\"\r\n            >\r\n              <a\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"LI-simple-link\"\r\n                href=\"https://www.linkedin.com/in/austin-kay-4a823b139?trk=profile-badge\"\r\n              >\r\n                Austin Kay - Builder\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <Typography style={{ marginTop: 20 }} variant=\"h4\" align=\"center\">\r\n            Features\r\n          </Typography>\r\n          <FeatureTable />\r\n          <FeatureGallery />\r\n        </div>\r\n      </div>\r\n    )\r\n  })\r\n)\r\n","import React, { useState } from 'react'\r\nimport {\r\n  TextField,\r\n  List,\r\n  ListSubheader,\r\n  ListItem,\r\n  ListItemText,\r\n  Theme,\r\n  createStyles,\r\n  withStyles,\r\n  WithStyles,\r\n  Button,\r\n  Typography\r\n} from '@material-ui/core'\r\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { formalize } from '../../utils/utilities'\r\nimport { TState } from '../../types/state'\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    list: {\r\n      backgroundColor: '#FAFAFA',\r\n      margin: '25px auto 0px auto',\r\n      borderRadius: 0,\r\n      width: '100%'\r\n    }\r\n  })\r\n\r\ntype OwnProps = {\r\n  variant?: 'menu'\r\n  noButton?: true\r\n  onClick?(): void\r\n}\r\n\r\ntype TProps = ReturnType<typeof mapState> &\r\n  WithStyles<typeof styles> &\r\n  OwnProps &\r\n  RouteComponentProps\r\n\r\nconst CProjectSearch = (props: TProps) => {\r\n  const [search, setSearch] = useState('')\r\n\r\n  const { classes } = props\r\n\r\n  let projects = [...Object.values(props.projects)]\r\n\r\n  projects = projects.filter(project => {\r\n    const myString: string = formalize(project.name)\r\n    const searchInput = formalize(search)\r\n\r\n    return myString.indexOf(searchInput) > -1\r\n  })\r\n\r\n  return (\r\n    <div style={{ maxWidth: 1000, marginLeft: 'auto', marginRight: 'auto', minWidth: 280 }}>\r\n      {props.variant !== 'menu' && (\r\n        <Typography align=\"center\" style={{ marginBottom: 10 }} variant=\"h4\">\r\n          Projects\r\n        </Typography>\r\n      )}\r\n      <TextField\r\n        autoFocus={props.variant === 'menu' ? true : undefined}\r\n        style={{ borderRadius: '0%' }}\r\n        fullWidth\r\n        label=\"Filter by Name or Category\"\r\n        variant={props.variant === 'menu' ? ('standard' as any) : 'outlined'}\r\n        value={search}\r\n        onChange={e => setSearch(e.target.value)}\r\n      />\r\n      <List\r\n        className={classes.list}\r\n        subheader={<ListSubheader component=\"div\">Projects</ListSubheader>}\r\n      >\r\n        {projects.map((project, i) => {\r\n          const isLink = project.id === ('create-project' as any)\r\n          const urlPrefix = isLink ? '' : '/project/'\r\n          return (\r\n            <div key={project.id} style={{ whiteSpace: 'nowrap' }}>\r\n              <ListItem\r\n                button\r\n                disabled={\r\n                  props.location.pathname.split('/project/')[1] === project.id\r\n                }\r\n                to={urlPrefix + project.id.toString()}\r\n                onClick={props.onClick}\r\n                component={Link}\r\n              >\r\n                <ListItemText primary={project.name} />\r\n              </ListItem>\r\n            </div>\r\n          )\r\n        })}\r\n      </List>\r\n      <div style={{ marginTop: 20 }}>\r\n        {!props.noButton && (\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            to=\"/create-project\"\r\n            component={Link}\r\n            fullWidth\r\n          >\r\n            Create Project\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapState = (state: TState) => {\r\n  return {\r\n    projects: state.projects\r\n  }\r\n}\r\n\r\nexport const ProjectFinder = withRouter(\r\n  connect(mapState)(withStyles(styles)(CProjectSearch))\r\n)\r\n","import React, { useState } from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport {\r\n  Theme,\r\n  WithStyles,\r\n  createStyles,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  Drawer,\r\n  Tab,\r\n  Avatar,\r\n  Tooltip,\r\n  Button,\r\n  Menu\r\n} from '@material-ui/core'\r\nimport { Trail } from 'react-spring/renderprops'\r\nimport {\r\n  HowToReg,\r\n  CalendarToday,\r\n  Help,\r\n  Settings\r\n} from '@material-ui/icons'\r\nimport { Link as NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { TState } from '../types/state'\r\nimport { ProjectFinder } from './ProjectFinder/ProjectFinder'\r\n\r\n/**\r\n * @todo Refresh changing tab is kinda slow\r\n * @todo make it have a Drawer for the Header with all the different links on mobile (have a button as well as being swipable)\r\n */\r\n\r\nconst noAuthItems = [\r\n  {\r\n    label: 'About',\r\n    pathname: '/',\r\n    menuIcon: Help\r\n  },\r\n  {\r\n    label: 'Login',\r\n    pathname: '/login',\r\n    menuIcon: HowToReg\r\n  },\r\n  {\r\n    label: 'Register',\r\n    pathname: '/register',\r\n    menuIcon: HowToReg\r\n  }\r\n]\r\n\r\nconst authItems = [\r\n  { label: 'Settings', pathname: '/settings', menuIcon: Settings },\r\n  {\r\n    label: 'Calendar',\r\n    pathname: '/calendar',\r\n    menuIcon: CalendarToday\r\n  }\r\n]\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    appBar: {\r\n      position: 'relative',\r\n      boxShadow: 'none',\r\n      borderBottom: `1px solid ${theme.palette.grey['100']}`,\r\n      backgroundColor: 'white'\r\n    },\r\n    inline: {\r\n      display: 'inline'\r\n    },\r\n    flex: {\r\n      display: 'flex'\r\n    },\r\n    link: {\r\n      textDecoration: 'none',\r\n      color: 'inherit'\r\n    },\r\n    tagline: {\r\n      display: 'inline-block',\r\n      marginLeft: 10\r\n    },\r\n    iconContainer: {\r\n      display: 'none',\r\n      [theme.breakpoints.down('md')]: {\r\n        display: 'block',\r\n        marginLeft: 'auto'\r\n      }\r\n    },\r\n    tabContainer: {\r\n      marginLeft: 'auto',\r\n      [theme.breakpoints.down('md')]: {\r\n        display: 'none'\r\n      }\r\n    },\r\n    tabItem: {\r\n      paddingTop: 20,\r\n      paddingBottom: 20,\r\n      minWidth: 'auto'\r\n    },\r\n    iconButton: {}\r\n  })\r\n\r\ntype TProps = WithStyles<typeof styles> &\r\n  RouteComponentProps &\r\n  ReturnType<typeof mapState>\r\n\r\nconst Topbar = (props: TProps) => {\r\n  const [drawer, setDrawer] = useState(false)\r\n  const [anchorEl, setAnchorEl] = useState(null as any)\r\n\r\n  const { classes } = props\r\n\r\n  const MenuItems = props.authenticated !== null ? authItems : noAuthItems\r\n\r\n  const value = MenuItems.map(menuItem => menuItem.pathname).indexOf(\r\n    props.location.pathname\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\r\n        <Toolbar style={{ minHeight: 64, padding: '0px 24px' }}>\r\n          <Grid container spacing={3} alignItems=\"center\">\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              style={{ alignItems: 'center' }}\r\n              className={classes.flex}\r\n            >\r\n              {props.authenticated !== null && (\r\n                <>\r\n                  <Button\r\n                    style={{\r\n                      margin: 'auto 25px auto 0px',\r\n                      paddingTop: 8,\r\n                      paddingBottom: 8\r\n                    }}\r\n                    color=\"primary\"\r\n                    variant=\"outlined\"\r\n                    onClick={e => setAnchorEl(e.currentTarget)}\r\n                  >\r\n                    <MenuIcon />\r\n                    <span style={{ marginLeft: 5 }}>Projects</span>\r\n                  </Button>\r\n                  <Menu\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={() => setAnchorEl(null)}\r\n                  >\r\n                    <div style={{ outline: 'none', margin: 10 }}>\r\n                      <ProjectFinder variant=\"menu\" />\r\n                    </div>\r\n                  </Menu>\r\n                </>\r\n              )}\r\n              <div className={classes.inline}>\r\n                <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                  <Trail\r\n                    items={'Kanban Brawn'}\r\n                    from={{ transform: 'translate3d(0,-40px,0)' }}\r\n                    to={{ transform: 'translate3d(0,0px,0)' }}\r\n                  >\r\n                    {item => trailProps => (\r\n                      <a\r\n                        target=\"_blank\"\r\n                        href=\"https://github.com/conradkay/Mantella\"\r\n                        style={{\r\n                          ...trailProps,\r\n                          color: 'black',\r\n                          textDecoration: 'none',\r\n                          paddingRight: 5\r\n                        }}\r\n                        className={classes.tagline}\r\n                      >\r\n                        Mantella\r\n                      </a>\r\n                    )}\r\n                  </Trail>\r\n                </Typography>\r\n              </div>\r\n              <React.Fragment>\r\n                <div className={classes.iconContainer}>\r\n                  <IconButton\r\n                    onClick={() => setDrawer(true)}\r\n                    className={classes.iconButton}\r\n                  >\r\n                    <MenuIcon />\r\n                  </IconButton>\r\n                </div>\r\n\r\n                <div className={classes.tabContainer}>\r\n                  <Tabs\r\n                    value={value === -1 ? false : value}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                  >\r\n                    {MenuItems.map((item, index) => (\r\n                      <Tab\r\n                        disabled={location.hash.slice(1) === item.pathname}\r\n                        style={{ minWidth: 96 }}\r\n                        key={index}\r\n                        to={item.pathname}\r\n                        component={NavLink}\r\n                        classes={{ root: classes.tabItem }}\r\n                        label={item.label}\r\n                      />\r\n                    ))}\r\n                  </Tabs>\r\n                </div>\r\n\r\n                {props.authenticated !== null && (\r\n                  <>\r\n                    <Tooltip title={`${props.authenticated.username}`}>\r\n                      <Avatar\r\n                        style={{\r\n                          margin: 'auto 10px',\r\n                          backgroundColor: '#0061ff'\r\n                        }}\r\n                      >\r\n                        {props.authenticated.username[0].toUpperCase()}\r\n                      </Avatar>\r\n                    </Tooltip>\r\n                  </>\r\n                )}\r\n              </React.Fragment>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer anchor=\"right\" open={drawer} onClose={() => setDrawer(false)}>\r\n        <div style={{ width: 'auto' }}>\r\n          <List>\r\n            {MenuItems.map((menuItem, index) => (\r\n              <ListItem\r\n                onClick={() => setDrawer(false)}\r\n                to={menuItem.pathname}\r\n                component={NavLink}\r\n                button\r\n                key={index}\r\n              >\r\n                <ListItemIcon>\r\n                  <menuItem.menuIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary={menuItem.label} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </div>\r\n      </Drawer>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapState = (state: TState) => ({\r\n  authenticated: state.user\r\n})\r\n\r\nconst Routed = withRouter(connect(mapState)(Topbar))\r\n\r\nexport const Header = withStyles(styles)(Routed)\r\n","import * as React from 'react'\r\nimport {\r\n  withStyles,\r\n  createStyles,\r\n  Theme,\r\n  SnackbarContent,\r\n  Snackbar,\r\n  IconButton,\r\n  WithStyles\r\n} from '@material-ui/core'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\r\nimport WarningIcon from '@material-ui/icons/Warning'\r\nimport ErrorIcon from '@material-ui/icons/Error'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport { closeSnackbarA } from '../../store/actions/snackbar'\r\nimport { TVariant } from '../../types/state'\r\nimport { TState } from '../../types/state'\r\nimport { Info } from '@material-ui/icons'\r\n\r\n/**\r\n * @description used in snackbarRoot to determine how to display snackbar based on state.snackbar.variant\r\n * @returns {JSX inline style} whether or not to load an error icon with red or success + green etc.\r\n */\r\ntype Classes = {\r\n  success: string\r\n  warning: string\r\n  error: string\r\n  standard: string\r\n}\r\nconst getClassSnackbarVariant = (variant: TVariant, classes: Classes) => {\r\n  if (variant === 'success') {\r\n    return classes.success\r\n  } else if (variant === 'warning') {\r\n    return classes.warning\r\n  } else if (variant === 'error') {\r\n    return classes.error\r\n  } else {\r\n    return classes.standard\r\n  }\r\n}\r\n\r\nconst FULL_WIDTH_POINT_PX = 960\r\nconst AUTO_HIDE_POINT_MS = 3000\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    success: { backgroundColor: '#43A047' }, // what a nice green\r\n    warning: { backgroundColor: '#FFA000' },\r\n    standard: {},\r\n    error: { backgroundColor: theme.palette.error.dark },\r\n    close: { width: 24, height: 24 },\r\n    message: { display: 'flex', alignItems: 'center' },\r\n    icon: { fontSize: 20, marginRight: theme.spacing(1) },\r\n    snackbar: {\r\n      [theme.breakpoints.down(FULL_WIDTH_POINT_PX)]: {\r\n        marginBottom: '0px !important'\r\n      }\r\n    }\r\n  })\r\n\r\ntype TProps = WithStyles<typeof styles> &\r\n  ReturnType<typeof mapState> &\r\n  typeof actionCreators\r\n\r\nconst SnackbarComponent = (props: TProps) => {\r\n  // Find what Icon to use for snackbar by variant\r\n  const variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    standard: Info\r\n  }\r\n  const { classes, open, message, variant, closeSnackbar } = props\r\n  const backgroundClass: string = getClassSnackbarVariant(variant, classes)\r\n\r\n  const Icon = variantIcon[variant]\r\n  return (\r\n    <Snackbar\r\n      anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n      open={open}\r\n      style={{ marginBottom: 20 }}\r\n      className={classes.snackbar}\r\n      autoHideDuration={AUTO_HIDE_POINT_MS}\r\n      onClose={closeSnackbar}\r\n    >\r\n      <SnackbarContent\r\n        className={backgroundClass}\r\n        message={\r\n          <span className={classes.message}>\r\n            <Icon className={classes.icon} />\r\n            <span style={{ marginLeft: 15, fontSize: 15 }}>{message}</span>\r\n          </span>\r\n        }\r\n        action={[\r\n          <IconButton\r\n            key=\"close\"\r\n            color=\"inherit\"\r\n            className={classes.icon}\r\n            onClick={closeSnackbar}\r\n          >\r\n            <CloseIcon className={classes.close} />\r\n          </IconButton>\r\n        ]}\r\n      />\r\n    </Snackbar>\r\n  )\r\n}\r\n\r\nconst mapState = ({ snackbar }: TState) => ({\r\n  open: snackbar.open,\r\n  message: snackbar.message,\r\n  variant: snackbar.variant\r\n})\r\n\r\nconst actionCreators = {\r\n  closeSnackbar: closeSnackbarA\r\n}\r\n\r\nexport const SnackbarRoot = connect(\r\n  mapState,\r\n  actionCreators\r\n)(withStyles(styles)(SnackbarComponent))\r\n","import ApolloClient from 'apollo-client'\r\n\r\nimport { ApolloLink } from 'apollo-link'\r\n\r\nimport { onError } from 'apollo-link-error'\r\n\r\nimport { HttpLink } from 'apollo-link-http'\r\n\r\nimport { InMemoryCache } from 'apollo-cache-inmemory'\r\n\r\nexport const client = new ApolloClient({\r\n  connectToDevTools: true,\r\n  link: ApolloLink.from([\r\n    onError(({ graphQLErrors, networkError }) => {\r\n      if (graphQLErrors) {\r\n        graphQLErrors.map(({ message, locations, path }) =>\r\n          console.error(\r\n            `GQL ERROR: Message: ${message}, Location: ${locations}, Path: ${path}`\r\n          )\r\n        )\r\n      }\r\n      if (networkError) {\r\n        console.error(`[Network error]: ${networkError}`)\r\n      }\r\n    }),\r\n    new HttpLink({\r\n      uri: `/graphql`,\r\n      credentials: 'include'\r\n    })\r\n  ]),\r\n  cache: new InMemoryCache()\r\n})\r\n","import { Route, Redirect, RouteProps } from 'react-router'\r\nimport { connect } from 'react-redux'\r\nimport { TState } from '../../types/state'\r\nimport React from 'react'\r\n\r\nconst mapState = (state: TState) => ({\r\n  user: state.user\r\n})\r\n\r\ntype TProps = ReturnType<typeof mapState> & {\r\n  component: any\r\n  componentProps: any\r\n} & RouteProps\r\n\r\nexport const PrivateRoute = connect(mapState)(\r\n  ({ component: PropComponent, componentProps, user, ...rest }: TProps) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props =>\r\n          user !== null ? (\r\n            <PropComponent\r\n              params={props.match.params}\r\n              {...(componentProps as (typeof PropComponent)['props'])}\r\n            />\r\n          ) : (\r\n            <Redirect to=\"/login\" />\r\n          )\r\n        }\r\n      />\r\n    )\r\n  }\r\n)\r\nexport const PublicOnlyRoute = connect(mapState)(\r\n  ({ component: PropComponent, componentProps, user, ...rest }: TProps) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props =>\r\n          user === null ? (\r\n            <PropComponent\r\n              {...componentProps}\r\n              params={props.match.params}\r\n              {...componentProps}\r\n            />\r\n          ) : (\r\n            <Redirect to=\"/dashboard\" />\r\n          )\r\n        }\r\n      />\r\n    )\r\n  }\r\n)\r\n","export const setListA = (args: {\r\n  id: string\r\n  projectId: string\r\n  newList: { taskIds?: string[]; name?: string } | null\r\n}) => ({\r\n  type: 'SET_LIST',\r\n  id: args.id,\r\n  projectId: args.projectId,\r\n  newList: args.newList\r\n})\r\n\r\nexport type ListAction = ReturnType<typeof setListA>\r\n\r\n// lol\r\n","import gql from 'graphql-tag'\r\nimport { projectFields } from '../fragments'\r\n\r\nexport const GQL_CREATE_LIST = gql`\r\n  ${projectFields}\r\n\r\n  mutation createList($name: String!, $projId: String!) {\r\n    createList(projId: $projId, name: $name) {\r\n      project {\r\n        ...projectFields\r\n      }\r\n      list {\r\n        ...listFields\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const GQL_DELETE_LIST = gql`\r\n  mutation deleteList($projectId: String!, $id: String!) {\r\n    deleteList(projId: $projectId, id: $id) {\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nexport const GQL_EDIT_LIST = gql`\r\n  ${projectFields}\r\n\r\n  mutation editList($id: String!, $projectId: String!, $newList: ListInput!) {\r\n    editList(listId: $id, projId: $projectId, newList: $newList) {\r\n      list {\r\n        ...listFields\r\n      }\r\n      project {\r\n        ...projectFields\r\n      }\r\n    }\r\n  }\r\n`\r\n","import * as React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  TextField,\r\n  DialogActions,\r\n  Button,\r\n  Theme,\r\n  createStyles,\r\n  WithStyles,\r\n  IconButton,\r\n  withStyles\r\n} from '@material-ui/core'\r\nimport { Close } from '@material-ui/icons'\r\nimport { Change } from '../../types/types'\r\nimport { setListA } from '../../store/actions/list'\r\nimport { TProject } from '../../types/project'\r\nimport { useState } from 'react'\r\nimport {\r\n  CreateListMutation,\r\n  CreateListMutationVariables\r\n} from '../../graphql/types'\r\nimport { GQL_CREATE_LIST } from '../../graphql/mutations/list'\r\nimport { useMutation } from 'react-apollo'\r\n\r\ninterface OwnProps {\r\n  project: TProject\r\n  onClose(): void\r\n}\r\n\r\ntype CreateColumnProps = typeof actionCreators &\r\n  OwnProps &\r\n  WithStyles<typeof styles>\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    closeButton: {\r\n      position: 'absolute',\r\n      right: theme.spacing(1),\r\n      top: theme.spacing(1),\r\n      color: theme.palette.grey[500]\r\n    }\r\n  })\r\n\r\nconst CCreateColumn = (props: CreateColumnProps) => {\r\n  const { project, onClose, classes } = props\r\n\r\n  const [name, setName] = useState('')\r\n\r\n  const [createListExec] = useMutation<\r\n    CreateListMutation,\r\n    CreateListMutationVariables\r\n  >(GQL_CREATE_LIST, {\r\n    onCompleted: ({ createList }) => {\r\n      props.setList({\r\n        id: createList.list!.id,\r\n        projectId: props.project.id,\r\n        newList: {\r\n          taskIds: [],\r\n          name: createList.list!.name || 'List'\r\n        }\r\n      })\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Dialog open={true} onClose={onClose}>\r\n      <form\r\n        onSubmit={e => {\r\n          e.preventDefault()\r\n\r\n          createListExec({\r\n            variables: {\r\n              name: name || 'List',\r\n              projId: project.id\r\n            }\r\n          })\r\n    \r\n          onClose()\r\n        }}\r\n      >\r\n        <DialogTitle>Create List</DialogTitle>\r\n        <IconButton className={classes.closeButton} onClick={onClose}>\r\n          <Close />\r\n        </IconButton>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Lists should contain either a type or date of task. Ex: \"Amanda\",\r\n            \"Expert Tasks\", or \"Writing\"\r\n          </DialogContentText>\r\n          <TextField\r\n            required\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label=\"List Name\"\r\n            value={name}\r\n            onChange={({ target }: Change) => setName(target.value)}\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button  onClick={onClose} color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          <Button  variant=\"contained\" color=\"primary\" type=\"submit\">\r\n            Create\r\n          </Button>\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nconst actionCreators = {\r\n  setList: setListA\r\n}\r\n// rename\r\nexport const CreateColumn = connect(\r\n  null,\r\n  actionCreators\r\n)(withStyles(styles)(CCreateColumn))\r\n","import React from 'react'\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Button,\r\n  DialogActions,\r\n  Typography,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemAvatar\r\n} from '@material-ui/core'\r\nimport { connect } from 'react-redux'\r\nimport { TProject } from '../../types/project'\r\nimport { setProjectA } from '../../store/actions/project'\r\nimport { Delete } from '@material-ui/icons'\r\nimport {\r\n  DeleteProjectMutation,\r\n  DeleteProjectMutationVariables\r\n} from '../../graphql/types'\r\nimport { GQL_DELETE_PROJECT } from '../../graphql/mutations/project'\r\nimport { useMutation } from 'react-apollo'\r\n\r\ntype TProps = {\r\n  onClose: () => void\r\n  project: TProject\r\n} & typeof actionCreators\r\n\r\nconst CProjectSettings = (props: TProps) => {\r\n  const [hasClicked, setClicked] = React.useState(false)\r\n\r\n  const [deleteProjectExec] = useMutation<\r\n    DeleteProjectMutation,\r\n    DeleteProjectMutationVariables\r\n  >(GQL_DELETE_PROJECT, {\r\n    onCompleted: ({ deleteProject }) => {\r\n      if (deleteProject && deleteProject.id) {\r\n        props.setProject({ id: deleteProject.id, newProj: null })\r\n      }\r\n    }\r\n  })\r\n\r\n  /*\r\n  const [setCommentExec] = useMutation<\r\n    SetCommentMutation,\r\n    SetCommentMutationVariables\r\n  >(GQL_SET_COMMENT, {\r\n    onCompleted: ({ setComment }) => {}\r\n  })\r\n\r\n  const [setSubtaskExec] = useMutation<\r\n    SetSubtaskMutation,\r\n    SetSubtaskMutationVariables\r\n  >(GQL_SET_SUBTASK, {\r\n    onCompleted: ({ setSubtask }) => {}\r\n  })\r\n  */\r\n\r\n  return (\r\n    <Dialog onClose={props.onClose} open={true}>\r\n      <div style={{ minWidth: '500px' }} />\r\n      <DialogTitle>Project Settings</DialogTitle>\r\n      <DialogContent>\r\n        <Typography style={{ fontSize: 20 }}>\r\n          <span style={{ color: 'red', marginRight: 8 }}>Danger Zone!</span>\r\n        </Typography>\r\n        <ListItem>\r\n          <ListItemAvatar>\r\n            <Delete />\r\n          </ListItemAvatar>\r\n          <ListItemText\r\n            primary=\"Delete this project\"\r\n            secondary=\"Once deleted, projects cannot be restored\"\r\n          />\r\n          <Button\r\n            size=\"medium\"\r\n            onClick={() => {\r\n              if (hasClicked) {\r\n                deleteProjectExec({ variables: { id: props.project.id } })\r\n              } else {\r\n                setClicked(true)\r\n              }\r\n            }}\r\n            color=\"primary\"\r\n            variant={hasClicked ? 'contained' : 'outlined'}\r\n            style={{ marginLeft: 16, maxHeight: 36, marginTop: 'auto' }}\r\n          >\r\n            {hasClicked ? 'Confirm' : 'Delete'}\r\n          </Button>\r\n        </ListItem>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.onClose}>Continue</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nconst actionCreators = {\r\n  setProject: setProjectA\r\n}\r\n\r\nexport const ProjectSettings = connect(\r\n  null,\r\n  actionCreators\r\n)(CProjectSettings)\r\n","import { isBefore } from 'date-fns'\r\nimport { isArray } from 'lodash'\r\n\r\nexport const hasPassed = (date?: Date | [Date, Date]): boolean => {\r\n  if (isArray(date)) {\r\n    return (date as any)[1]\r\n  }\r\n  return date ? isBefore(date, new Date()) : false\r\n}\r\n","import { format } from 'date-fns'\r\nimport { hasPassed } from './hasPassed'\r\nimport { TTask } from '../types/project'\r\nimport { toDaysHHMMSS } from './convertToTime'\r\nimport { formatDistance } from 'date-fns'\r\n\r\n// Jan 1st 12:02 am\r\nconst baseFormat = (date: Date): string => format(date, 'MMM do h:mm a')\r\n\r\nconst overdueFormat = (date: Date): string => {\r\n  return 'Overdue by ' + formatDistance( new Date(), date)\r\n}\r\n\r\nconst god = (date: Date, hasOver?: boolean): string => {\r\n  return hasPassed(date) && hasOver\r\n    ? overdueFormat(date)\r\n    : 'Due ' + baseFormat(date)\r\n}\r\n\r\nexport const formatDueDate = (task: TTask, hasOverDue?: boolean): string => {\r\n  if (!task.dueDate) {\r\n    return ''\r\n  }\r\n\r\n  if (!task.recurrance) {\r\n    return god(new Date(task.dueDate), hasOverDue)\r\n  }\r\n\r\n  if (task.recurrance.interval) {\r\n    return `Due every ${toDaysHHMMSS(\r\n      task.recurrance.interval!,\r\n      true\r\n    )} next: ${god(new Date(task.dueDate), hasOverDue)}`\r\n  }\r\n\r\n  return god(new Date(task.dueDate), hasOverDue)\r\n}\r\n","import { cloneDeep } from 'lodash'\r\nimport { TSubtask, TTask } from './../../types/project'\r\n\r\nexport const setTaskA = (args: {\r\n  id: string\r\n  newTask: TTask | null\r\n  projectId: string\r\n}) => ({\r\n  type: 'SET_TASK',\r\n  id: args.id,\r\n  projectId: args.projectId,\r\n  newTask: args.newTask ? cloneDeep({ ...args.newTask }) : null\r\n})\r\n\r\nexport const setSubtaskA = (args: {id: string, newSubtask: TSubtask, projectId: string, taskId: string}) => ({\r\n  type: 'SET_SUBTASK',\r\n  id: args.id, projectId: args.projectId,\r\n  newSubtask: args.newSubtask, taskId: args.taskId\r\n})\r\n\r\nexport type TaskAction = ReturnType<typeof setTaskA> | ReturnType<typeof setSubtaskA>\r\n","import { projectFields, taskFields } from './../fragments'\r\nimport gql from 'graphql-tag'\r\n\r\nexport const GQL_SET_SUBTASK = gql`\r\n  ${taskFields}\r\n\r\n  mutation setSubtask(\r\n    $projId: String!\r\n    $taskId: String!\r\n    $subtaskId: String\r\n    $info: SubtaskInfo\r\n  ) {\r\n    setSubtask(\r\n      projId: $projId\r\n      taskId: $taskId\r\n      subtaskId: $subtaskId\r\n      info: $info\r\n    ) {\r\n      ...taskFields\r\n    }\r\n  }\r\n`\r\nexport const GQL_SET_COMMENT = gql`\r\n  ${taskFields}\r\n\r\n  mutation setComment(\r\n    $projId: String!\r\n    $taskId: String!\r\n    $commentId: String\r\n    $description: String\r\n  ) {\r\n    setComment(\r\n      projId: $projId\r\n      taskId: $taskId\r\n      commentId: $commentId\r\n      description: $description\r\n    ) {\r\n      ...taskFields\r\n    }\r\n  }\r\n`\r\n\r\nexport const GQL_CREATE_TASK = gql`\r\n  ${projectFields}\r\n\r\n  mutation createTask(\r\n    $taskInfo: TaskInput!\r\n    $projId: String!\r\n    $listId: String!\r\n  ) {\r\n    createTask(taskInfo: $taskInfo, projId: $projId, listId: $listId) {\r\n      project {\r\n        ...projectFields\r\n      }\r\n\r\n      task {\r\n        ...taskFields\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const GQL_EDIT_TASK = gql`\r\n  ${projectFields}\r\n\r\n  mutation editTask($projId: String!, $taskId: String!, $newTask: TaskInput!) {\r\n    editTask(projId: $projId, taskId: $taskId, task: $newTask) {\r\n      project {\r\n        ...projectFields\r\n      }\r\n      task {\r\n        ...taskFields\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const GQL_DELETE_TASK = gql`\r\n  ${projectFields}\r\n\r\n  mutation deleteTask($projId: String!, $taskId: String!) {\r\n    deleteTask(projId: $projId, id: $taskId) {\r\n      project {\r\n        ...projectFields\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const GQL_DRAG_TASK = gql`\r\n  ${projectFields}\r\n\r\n  mutation dragTask(\r\n    $oldListId: String!\r\n    $newListId: String!\r\n    $newIndex: Int!\r\n    $id: String!\r\n    $newProgress: Int!\r\n    $projectId: String!\r\n  ) {\r\n    dragTask(\r\n      oldListId: $oldListId\r\n      newListId: $newListId\r\n      newIndex: $newIndex\r\n      id: $id\r\n      newProgress: $newProgress\r\n      projectId: $projectId\r\n    ) {\r\n      task {\r\n        ...taskFields\r\n      }\r\n      project {\r\n        ...projectFields\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { TTask, TSubtask } from '../../../types/project'\r\nimport { connect } from 'react-redux'\r\nimport { TState } from '../../../types/state'\r\nimport {\r\n  selectPomodoroTaskA,\r\n  toggleTimerA\r\n} from '../../../store/actions/pomodoro'\r\nimport {\r\n  LinearProgress,\r\n  Badge,\r\n  createStyles,\r\n  WithStyles,\r\n  withStyles,\r\n  IconButton\r\n} from '@material-ui/core'\r\nimport { DraggableProvided, DraggableStateSnapshot } from 'react-beautiful-dnd'\r\nimport { formatDueDate } from '../../../utils/formatDueDate'\r\nimport { toDaysHHMMSS } from '../../../utils/convertToTime'\r\nimport {\r\n  CheckBox,\r\n  CheckBoxOutlineBlankOutlined,\r\n  PlayArrow,\r\n  Pause,\r\n  Comment,\r\n  List\r\n} from '@material-ui/icons'\r\n// import {GQL_SET_SUBTASK} from '../../../graphql/mutations/task'\r\nimport { hasPassed } from '../../../utils/hasPassed'\r\nimport { Transition, animated } from 'react-spring/renderprops'\r\nimport { TProject } from '../../../types/project'\r\nimport { selectMemberA } from '../../../store/actions/project'\r\nimport { setSubtaskA } from '../../../store/actions/task'\r\nimport { GQL_SET_SUBTASK } from '../../../graphql/mutations/task'\r\nimport { useMutation } from 'react-apollo'\r\nimport { SetSubtaskMutation, SetSubtaskMutationVariables } from '../../../graphql/types'\r\n\r\nconst useInterval = (callback: () => void, delay: number) => {\r\n  const savedCallback = useRef(undefined as any)\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback\r\n  })\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current()\r\n    }\r\n    if (delay !== null) {\r\n      const id = setInterval(tick, delay)\r\n      return () => clearInterval(id)\r\n    }\r\n    return\r\n  }, [delay])\r\n}\r\n\r\nexport const SubtaskMap = ({\r\n  subTasks,\r\n  onCheckbox,\r\n  taskId,\r\n  show\r\n}: {\r\n  subTasks: TSubtask[]\r\n  onCheckbox: (newSub: TSubtask) => void\r\n  taskId: string\r\n  show: boolean\r\n}) => (\r\n  <div style={{ marginLeft: 30 }}>\r\n    <Transition\r\n      initial={null}\r\n      native\r\n      items={show ? subTasks : []}\r\n      keys={\r\n        show\r\n          ? subTasks.map(subTask => subTask.id)\r\n          : []\r\n      }\r\n      from={{ opacity: 1, height: 0, overflow: 'hidden' }}\r\n      enter={{ opacity: 1, height: 'auto' }}\r\n      leave={{ opacity: 0, height: 0, overflow: 'hidden' }}\r\n    >\r\n      {subTask => props => (\r\n        <animated.div\r\n          style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            ...props\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              marginTop: 6\r\n            }}\r\n          >\r\n            {subTask.completed ? (\r\n              <CheckBox\r\n                onClick={e => {\r\n                  e.stopPropagation()\r\n                  onCheckbox({...subTask, completed: false})\r\n                }}\r\n              />\r\n            ) : (\r\n              <CheckBoxOutlineBlankOutlined\r\n                onClick={e => {\r\n                  e.stopPropagation()\r\n                  onCheckbox({...subTask, completed: true})\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n          <span style={{ marginLeft: 8 }}>{subTask.name}</span>\r\n        </animated.div>\r\n      )}\r\n    </Transition>\r\n  </div>\r\n)\r\n\r\ninterface OwnProps {\r\n  project: TProject\r\n  task: TTask\r\n  provided: DraggableProvided\r\n  snapshot: DraggableStateSnapshot\r\n  openFunc(): void\r\n}\r\n\r\nconst styles = () =>\r\n  createStyles({\r\n    badgeColor: {\r\n      backgroundColor: '#4caf50'\r\n    },\r\n    badge: {\r\n      marginTop: 15,\r\n      marginRight: 15\r\n      // position: 'relative'\r\n    },\r\n    input: {\r\n      cursor: 'inherit',\r\n      position: 'absolute',\r\n      opacity: 0,\r\n      width: '100%',\r\n      height: '100%',\r\n      top: 0,\r\n      left: 0,\r\n      margin: 0,\r\n      padding: 0\r\n    },\r\n    play: {\r\n      padding: 6,\r\n      marginRight: 2,\r\n      color: 'rgba(0, 0, 0, 0.54)'\r\n    }\r\n  })\r\n\r\ntype TaskProps = OwnProps &\r\n  ReturnType<typeof mapState> &\r\n  typeof actionCreators &\r\n  WithStyles<typeof styles>\r\n\r\nconst CBaseTask = (props: TaskProps) => {\r\n  const [showComments, setShowComments] = useState(false)\r\n  const [showSubTasks, setShowSubTasks] = useState(true)\r\n\r\n  const [formatDate, setFormatDate] = useState(formatDueDate(props.task, true))\r\n\r\n  if (formatDueDate(props.task, true) !== formatDate) {\r\n    setFormatDate(formatDueDate(props.task, true))\r\n  }\r\n  useInterval(() => {\r\n    if (props.task.dueDate) {\r\n      setFormatDate(formatDueDate(props.task, true))\r\n    }\r\n  }, 1000)\r\n\r\n  const { task, isSelectingTask, provided, snapshot, openFunc } = props\r\n  const MIN_HEIGHT = 20\r\n\r\n  const border = '1px solid rgba(0, 0, 0, 0.12)'\r\n\r\n  const [setSubtaskExec] = useMutation<SetSubtaskMutation, SetSubtaskMutationVariables>(GQL_SET_SUBTASK, {\r\n    onCompleted: ({setSubtask}) => {\r\n      if(setSubtask) {\r\n\r\n      }\r\n      else {\r\n        console.log('no subtask returned')\r\n      }\r\n    },\r\n    onError: () => {}\r\n  })\r\n\r\n  return task ? (\r\n    <div style={{ width: '100%' }}>\r\n      <div\r\n        id={task.id.toString()}\r\n        ref={provided ? provided.innerRef : undefined}\r\n        {...provided.draggableProps}\r\n        {...provided.dragHandleProps}\r\n        style={{\r\n          minHeight: MIN_HEIGHT,\r\n          backgroundColor: task.color ? task.color : 'white',\r\n          border,\r\n          borderBottom: 'border',\r\n          ...provided.draggableProps.style,\r\n          color: snapshot ? (snapshot.isDragging ? 'gray' : 'black') : 'black',\r\n          outline: 'none'\r\n        }}\r\n        onClick={() => {\r\n          /* if (project && project.selectingMember) {\r\n            props.stopSelectingMember({\r\n              id: project.selectingMember,\r\n              projectId: project.id\r\n            })\r\n          } else */ if (\r\n            isSelectingTask\r\n          ) {\r\n            props.selectPomodoroTask(task.id.toString())\r\n          } else {\r\n            openFunc()\r\n          }\r\n        }}\r\n      >\r\n        <Badge\r\n          classes={{\r\n            colorSecondary: props.classes.badgeColor,\r\n            badge: props.classes.badge\r\n          }}\r\n          color={'primary'}\r\n          badgeContent={task.points}\r\n          style={{\r\n            width: '100%',\r\n            display: 'flex',\r\n            minHeight: MIN_HEIGHT,\r\n            outline: 'none'\r\n          }}\r\n        >\r\n          <div style={{ margin: 4, width: '100%', display: 'block' }}>\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                alignItems: 'center'\r\n              }}\r\n            >\r\n              <span\r\n                id={task.id}\r\n                style={{\r\n                  fontSize: 18,\r\n                  maxWidth: '94%',\r\n                  color:\r\n                    snapshot && snapshot.isDragging\r\n                      ? 'gray'\r\n                      : hasPassed(\r\n                          task.dueDate ? new Date(task.dueDate) : undefined\r\n                        ) && task.progress !== 2\r\n                      ? '#d32f24'\r\n                      : 'black',\r\n                  marginLeft: 4,\r\n                  marginTop: 4\r\n                }}\r\n              >\r\n                <div style={{ display: 'flex' }}>\r\n                  {task.name ? task.name : 'Unnamed Task'}\r\n                </div>\r\n              </span>\r\n            </div>\r\n            <SubtaskMap\r\n              show={showSubTasks}\r\n              subTasks={task.subTasks}\r\n              taskId={task.id}\r\n              onCheckbox={(newSub: TSubtask) => {\r\n                props.setSubtask({taskId: task.id, projectId: props.project.id, id: newSub.id, newSubtask: newSub})\r\n                setSubtaskExec({variables: {projId: props.project.id, taskId: task.id, subtaskId: newSub.id, info: {name: newSub.name, completed: newSub.completed}}})\r\n              }}\r\n            />\r\n\r\n            {task.comments.length !== 0 && (\r\n              <Transition\r\n                initial={null}\r\n                items={showComments}\r\n                from={{ height: 0, overflow: 'hidden' }}\r\n                enter={{ height: 'auto' }}\r\n                leave={{ height: 0, overflow: 'hidden' }}\r\n              >\r\n                {show =>\r\n                  show &&\r\n                  (style => (\r\n                    <animated.div style={{ marginLeft: 6, ...style }}>\r\n                      <div\r\n                        style={{\r\n                          paddingTop: 10,\r\n                          paddingBottom: 10,\r\n                          borderRadius: '.8rem'\r\n                        }}\r\n                      >\r\n                        {task.comments.map(comment => (\r\n                          <div key={comment.id} style={{ color: 'black' }}>\r\n                            <span style={{ color: 'rgba(0, 0, 0, 0.70)' }}>\r\n                              {\r\n                                formatDueDate(\r\n                                  {\r\n                                    ...task,\r\n                                    dueDate: comment.dateAdded,\r\n                                    recurrance: undefined\r\n                                  },\r\n                                  false\r\n                                ).split('Due')[1]\r\n                              }\r\n                            </span>\r\n                            {'  -  '}\r\n                            {comment.comment}\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </animated.div>\r\n                  ))\r\n                }\r\n              </Transition>\r\n            )}\r\n            {task.dueDate && task.progress !== 2 && (\r\n              <>\r\n                <div style={{ marginLeft: 6 }}>{formatDate}</div>\r\n              </>\r\n            )}\r\n\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                cursor: 'pointer'\r\n              }}\r\n            >\r\n              {Object.values(task.comments).length !== 0 && (\r\n                <IconButton\r\n                  className={props.classes.play}\r\n                  onClick={e => {\r\n                    e.stopPropagation()\r\n                    setShowComments(!showComments)\r\n                  }}\r\n                >\r\n                  <Comment />\r\n                </IconButton>\r\n              )}\r\n              {Object.values(task.subTasks).length !== 0 && (\r\n                <IconButton\r\n                  style={{ marginRight: 8 }}\r\n                  className={props.classes.play}\r\n                  onClick={e => {\r\n                    // eventually have it toggle icon based on current showSubtasks(same with comments)\r\n                    e.stopPropagation()\r\n                    setShowSubTasks(!showSubTasks)\r\n                  }}\r\n                >\r\n                  <List />\r\n                </IconButton>\r\n              )}\r\n              {task.timeWorkedOn !== 0 && (\r\n                <span style={{ alignSelf: 'center' }}>\r\n                  Worked on for {toDaysHHMMSS(task.timeWorkedOn, true)}\r\n                </span>\r\n              )}\r\n              {!props.isCurrentTask ? (\r\n                <PlayArrow\r\n                  style={{ marginLeft: 'auto' }}\r\n                  className={props.classes.play}\r\n                  onClick={e => {\r\n                    e.stopPropagation()\r\n                    props.selectPomodoroTask(task.id)\r\n                    props.toggleTimer()\r\n                  }}\r\n                />\r\n              ) : (\r\n                <Pause\r\n                  style={{ marginLeft: 'auto' }}\r\n                  className={props.classes.play}\r\n                  onClick={e => {\r\n                    e.stopPropagation()\r\n                    props.selectPomodoroTask(task.id)\r\n                    props.toggleTimer()\r\n                  }}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Badge>\r\n        {task.subTasks.length !== 0 && (\r\n          <LinearProgress\r\n            style={{\r\n              borderRadius: 0\r\n            }}\r\n            variant=\"determinate\"\r\n            color=\"secondary\"\r\n            value={\r\n              task.progress === 2\r\n                ? 100\r\n                : (task.subTasks.filter(subTask => subTask.completed).length /\r\n                    task.subTasks.length) *\r\n                  100\r\n            }\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  ) : null\r\n}\r\n\r\nconst mapState = (state: TState, ownProps: OwnProps) => ({\r\n  isSelectingTask: state.pomodoro.selectingTask,\r\n  isCurrentTask: state.pomodoro.selectedTaskId === ownProps.task.id.toString(),\r\n  pomodoro: state.pomodoro\r\n})\r\n\r\nconst actionCreators = {\r\n  selectPomodoroTask: selectPomodoroTaskA,\r\n  stopSelectingMember: selectMemberA,\r\n  toggleTimer: toggleTimerA,\r\n  selectMember: selectMemberA,\r\n  setSubtask: setSubtaskA\r\n}\r\n\r\nexport const BaseTask = withStyles(styles)(\r\n  connect(\r\n    mapState,\r\n    actionCreators\r\n  )(CBaseTask)\r\n)\r\n","export const colors = {\r\n  White: '#FFFFFF',\r\n  Blue: '#c3ddff', // RUSSIA #1, or is this Merica?\r\n  Red: '#ffccd6',\r\n  Yellow: '#ffffe0',\r\n  Orange: '#ffe7b6',\r\n  Purple: '#e2d2f2',\r\n  cyan: '#dbfff2',\r\n  Green: '#dcffc2',\r\n  Magenta: '#ffe8ff',\r\n  Brown: '#f1d6c2'\r\n}\r\n\r\nexport type TColor = typeof colors\r\n","import {\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  FormHelperText\r\n} from '@material-ui/core'\r\n\r\nimport React from 'react'\r\n\r\nimport { colors } from '../../colors'\r\nimport uuidv1 from 'uuid/v1'\r\n\r\ntype OwnProps = {\r\n  color: string\r\n  hasAllOption?: boolean\r\n  onChange(color: string): void\r\n}\r\n\r\nexport const ChooseColor = (props: OwnProps) => {\r\n  const { hasAllOption } = props\r\n  const gradientNames = `linear-gradient(to right, ${Object.values(colors)\r\n    .slice(1)\r\n    .join(', ')})`\r\n\r\n  return (\r\n    <FormControl fullWidth>\r\n      <Select\r\n        fullWidth\r\n        value={props.color}\r\n        onChange={(e: any) => props.onChange(e.target.value)}\r\n      >\r\n        {hasAllOption && (\r\n          <MenuItem\r\n            value=\"all\"\r\n            selected={false}\r\n            style={{\r\n              background: gradientNames\r\n            }}\r\n          >\r\n            Any\r\n          </MenuItem>\r\n        )}\r\n        {Object.keys(colors).map((key: any, i) => (\r\n          <MenuItem\r\n            selected={false}\r\n            style={{ backgroundColor: (colors as any)[key] || 'white' }}\r\n            key={uuidv1()}\r\n            value={(colors as any)[key]}\r\n          >\r\n            {key}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n      <FormHelperText>Color</FormHelperText>\r\n    </FormControl>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, FormHelperText, IconButton, MenuItem, Select, TextField } from '@material-ui/core'\r\nimport { connect } from 'react-redux'\r\nimport { GQL_CREATE_TASK } from '../../../graphql/mutations/task'\r\nimport { CreateTaskMutation, CreateTaskMutationVariables } from '../../../graphql/types'\r\nimport {useMutation} from 'react-apollo'\r\nimport { setProjectA } from '../../../store/actions/project'\r\nimport { Close } from '@material-ui/icons'\r\nimport { ChooseColor } from '../../utils/chooseColor'\r\nimport { TProject } from '../../../types/project'\r\nimport { DateTimePicker } from 'react-widgets'\r\nconst actionCreators = {\r\n  setProject: setProjectA\r\n}\r\n\r\ntype OwnProps = {\r\n  onClose: () => void\r\n  project: TProject\r\n  columnId: string\r\n  listId: string\r\n}\r\n\r\ntype TProps = OwnProps & typeof actionCreators\r\n\r\nexport const CreateTask = connect(\r\n  null,\r\n  actionCreators\r\n)((props: TProps) => {\r\n  const [name, setName] = useState('')\r\n  const [color, setColor] = useState('#FFFFFF')\r\n  const [points, setPoints] = useState(0)\r\n  const [listId, setListId] = useState(props.project.lists[0].id)\r\n  const [dueDate, setDueDate] = useState(undefined as undefined | Date)\r\n  const [createTaskExec] = useMutation<\r\n    CreateTaskMutation,\r\n    CreateTaskMutationVariables\r\n  >(GQL_CREATE_TASK, {\r\n    onCompleted: ({ createTask }) => {\r\n      if (createTask && createTask.task && createTask.project) {\r\n        props.setProject({\r\n          id: createTask.project.id,\r\n          newProj: createTask.project\r\n        })\r\n      }\r\n      props.onClose()\r\n    },\r\n    onError: () => props.onClose()\r\n  })\r\n\r\n  return (\r\n    <Dialog open={true} onClose={() => props.onClose()}>\r\n      <form\r\n        onSubmit={e => {\r\n          e.preventDefault()\r\n\r\n          createTaskExec({\r\n            variables: {\r\n              projId: props.project.id,\r\n              listId: listId,\r\n              taskInfo: {\r\n                points,\r\n                color,\r\n                name,\r\n                dueDate: dueDate ? dueDate.toString() : undefined\r\n              }\r\n            }\r\n          })\r\n        }}\r\n      >\r\n        <DialogTitle>Create Task</DialogTitle>\r\n        <IconButton style={{ position: 'absolute',\r\n      right: 8,\r\n      top: 8,\r\n      color: 'gray' }} onClick={() => props.onClose()}>\r\n          <Close />\r\n        </IconButton>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Tasks should be a small chunk of what you need to do.\r\n            For example, if you needed to create a Youtube thumbnail, the first\r\n            task would be: \"Create Title\"\r\n          </DialogContentText>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'flex-end',\r\n              flex: '0 0 auto',\r\n              marginTop: 12\r\n            }}\r\n          >\r\n            <TextField\r\n              style={{ margin: '0 4px' }}\r\n              required\r\n              autoFocus\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              label=\"Title\"\r\n              value={name}\r\n              onChange={({ target }) =>\r\n                setName(target.value)\r\n              }\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              style={{ margin: '0 4px', width: '33%' }}\r\n              required\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              label=\"Points\"\r\n              value={points}\r\n              type=\"number\"\r\n              onChange={e => {\r\n                e.persist() // for some reason it unfocuses without this!\r\n                if (parseInt(e.target.value) >= 0) {\r\n                  setPoints(parseInt(e.target.value))\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n          <div style={{ display: 'flex', marginTop: 20 }}>\r\n            <ChooseColor\r\n              color={color || '#FFFFFF'}\r\n              onChange={(color: string) => {\r\n                setColor(color)\r\n              }}\r\n            />\r\n\r\n            <div style={{ width: 24 }} />\r\n\r\n            <FormControl fullWidth>\r\n              <Select\r\n                fullWidth\r\n                value={listId}\r\n                onChange={e => {\r\n                  setListId(e.target.value as any)\r\n                }}\r\n              >\r\n                {props.project.lists.map((list, i) => {\r\n                  return (\r\n                    <MenuItem key={list.id} value={list.id}>\r\n                      <pre>\r\n                        <em>{list.name}</em>\r\n                      </pre>\r\n                    </MenuItem>\r\n                  )\r\n                })}\r\n              </Select>\r\n              <FormHelperText>Task's List</FormHelperText>\r\n            </FormControl>\r\n          </div>\r\n          <div style={{ display: 'flex', marginTop: 20 }}>\r\n            <DateTimePicker\r\n            dropUp\r\n              containerClassName=\"fullwidth\"\r\n              value={dueDate}\r\n              onChange={(date) => {\r\n                setDueDate(date)\r\n              }}\r\n            />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => props.onClose()} color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n            Create Task\r\n          </Button>\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n    \r\n  )\r\n})","import React, { useState } from 'react'\r\nimport { TList, TProject } from '../../../types/project'\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd'\r\nimport { BaseTask } from '../Task/Base'\r\nimport {\r\n  IconButton,\r\n  Menu as MuiMenu,\r\n  MenuItem\r\n} from '@material-ui/core'\r\nimport { id } from '../../../utils/utilities'\r\nimport { CreateTask } from '../Task/Create'\r\nimport { Menu, Add } from '@material-ui/icons'\r\n\r\ntype OwnProps = {\r\n  progress: number // 0, 1, or 2\r\n  list: TList\r\n  project: TProject\r\n  collapseList: (id: string) => void\r\n  collapsedLists: string[]\r\n  openFunc: (id: string) => void\r\n  deleteList: (id: string) => void\r\n}\r\ntype TProps = OwnProps\r\n\r\nexport const ProjectCell = (props: TProps) => {\r\n  let tasks = props.list.taskIds\r\n    .map(taskId => props.project.tasks[id(props.project.tasks, taskId)])\r\n    .filter(task => {\r\n      return task.progress === props.progress\r\n    })\r\n\r\n  if (props.progress === 2) {\r\n    tasks = tasks\r\n  }\r\n\r\n  const [creating, setCreating] = useState('')\r\n  const [anchorEl, setAnchorEl] = useState(null as any)\r\n  const [deletingList, setDeletingList] = useState(null as any)\r\n\r\n  return (\r\n    <td\r\n      style={{\r\n        borderRight: `1px ${props.progress !== 2 ? 'dashed' : 'solid'} #aebacc`,\r\n        borderBottom:\r\n          props.project.lists.findIndex(list => props.list.id === list.id) ===\r\n          props.project.lists.length - 1\r\n            ? '1px solid #aebacc'\r\n            : undefined,\r\n        borderTop: '1px solid #aebacc',\r\n        borderLeft:\r\n          props.progress === 0\r\n            ? `1px ${props.progress ? 'dashed' : 'solid'} #aebacc`\r\n            : undefined,\r\n        width: '100%',\r\n        padding: props.collapsedLists.includes(props.list.id) ? '0px 8px' : 8,\r\n        maxHeight: props.collapsedLists.includes(props.list.id) ? 100 : '60vh',\r\n        overflowY: 'auto'\r\n      }}\r\n    >\r\n      {props.progress === 0 && (\r\n        <div style={{ display: 'flex', margin: 4 }}>\r\n          {props.collapsedLists.includes(props.list.id) && (\r\n            <h2\r\n              style={{\r\n                fontSize: 16,\r\n                margin: 'auto 8px auto 0px',\r\n                color: 'gray'\r\n              }}\r\n            >\r\n              [Collapsed]\r\n            </h2>\r\n          )}\r\n          <h2 style={{ margin: 'auto 0px', fontSize: 18 }}>\r\n            {props.list.name}\r\n          </h2>\r\n          <IconButton\r\n            onClick={e => setAnchorEl(e.currentTarget)}\r\n            style={{ marginLeft: 'auto' }}\r\n          >\r\n            <Menu />\r\n          </IconButton>\r\n          {!props.collapsedLists.includes(props.list.id) && (\r\n        <IconButton\r\n          color=\"primary\"\r\n          style={{ marginLeft: 8}}\r\n          onClick={() => setCreating('string') /* TODO: add columns */}\r\n        >\r\n          <Add />\r\n        </IconButton>\r\n      )}\r\n          <MuiMenu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            open={Boolean(anchorEl)}\r\n            onClose={() => setAnchorEl(null)}\r\n          >\r\n            <MenuItem\r\n              onClick={() => {\r\n                setAnchorEl(null)\r\n                props.collapseList(props.list.id)\r\n              }}\r\n            >\r\n              {props.collapsedLists.includes(props.list.id) ? 'Uncollapse' : 'Collapse'}\r\n            </MenuItem>\r\n            <MenuItem\r\n              onClick={() => {\r\n                setAnchorEl(null)\r\n              }}\r\n            >\r\n              Edit\r\n            </MenuItem>\r\n            <MenuItem\r\n              onClick={() => {\r\n                if (deletingList && props.project.lists.length > 1) {\r\n                  setAnchorEl(null)\r\n                  props.deleteList(props.list.id)\r\n                } else {\r\n                  setDeletingList(true)\r\n                  setTimeout(() => setDeletingList(false), 4000) // dont have confirm message forever\r\n                }\r\n              }}\r\n            >\r\n              {/* TODO:  when they click, make text red and say confirm */}\r\n              {deletingList ? (\r\n                <div style={{ color: 'red', fontWeight: 500 }}>Confirm</div>\r\n              ) : (\r\n                'Delete'\r\n              )}\r\n            </MenuItem>\r\n          </MuiMenu>\r\n        </div>\r\n      )}\r\n      <Droppable\r\n        isDropDisabled={props.collapsedLists.includes(props.list.id)}\r\n        droppableId={`${props.list.id}DIVIDER${props.progress}`}\r\n      >\r\n        {(dropProvided, dropSnapshot) => {\r\n          return (\r\n            <div\r\n              style={{\r\n                flexDirection: 'column',\r\n                display: 'flex',\r\n                minHeight: props.collapsedLists.includes(props.list.id)\r\n                  ? 0\r\n                  : 78,\r\n                height: `calc(100% - ${props.progress ? '78px' : '178px'})`,\r\n                backgroundColor: 'white',\r\n                paddingBottom: props.collapsedLists.includes(props.list.id) ? 0 : 78 // needed for dragging to bottom of list\r\n              }}\r\n              {...dropProvided.droppableProps}\r\n              ref={dropProvided.innerRef}\r\n            >\r\n              {!props.collapsedLists.includes(props.list.id)\r\n                ? tasks.map((task, i) => (\r\n                    <Draggable draggableId={task.id} index={i} key={task.id}>\r\n                      {(dragProvided, dragSnapshot) => (\r\n                        <BaseTask\r\n                          openFunc={() => props.openFunc(task.id)}\r\n                          project={props.project}\r\n                          task={task}\r\n                          provided={dragProvided}\r\n                          snapshot={dragSnapshot}\r\n                        />\r\n                      )}\r\n                    </Draggable>\r\n                  ))\r\n                : null}\r\n              {dropProvided.placeholder}\r\n            </div>\r\n          )\r\n        }}\r\n      </Droppable>\r\n      {creating && (\r\n        <CreateTask\r\n          onClose={() => setCreating('')}\r\n          project={props.project}\r\n          listId={props.project.lists[0].id}\r\n          columnId={creating}\r\n        />\r\n      )}\r\n    </td>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport {\r\n  Dialog,\r\n  TextField,\r\n  Button,\r\n  DialogTitle,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n  FormHelperText,\r\n  Typography,\r\n  Checkbox,\r\n  IconButton\r\n} from '@material-ui/core'\r\nimport uuid from 'uuid'\r\nimport { connect } from 'react-redux'\r\nimport { TState } from '../../../types/state'\r\nimport { id, getAllListsArr } from '../../../utils/utilities'\r\nimport {\r\n  GQL_EDIT_TASK,\r\n  GQL_DRAG_TASK,\r\n  GQL_SET_SUBTASK,\r\n  GQL_SET_COMMENT\r\n} from '../../../graphql/mutations/task'\r\nimport { useMutation } from 'react-apollo'\r\n\r\nimport {\r\n  EditTaskMutation,\r\n  EditTaskMutationVariables,\r\n  DragTaskMutation,\r\n  DragTaskMutationVariables,\r\n  SetSubtaskMutation,\r\n  SetSubtaskMutationVariables,\r\n  SetCommentMutation,\r\n  SetCommentMutationVariables\r\n} from '../../../graphql/types'\r\nimport { setTaskA } from '../../../store/actions/task'\r\nimport { ChooseColor } from '../../utils/chooseColor'\r\nimport { setProjectA } from '../../../store/actions/project'\r\nimport DateTimePicker from 'react-widgets/lib/DateTimePicker'\r\nimport { Add, Delete } from '@material-ui/icons'\r\nimport { formatDueDate } from '../../../utils/formatDueDate'\r\nimport { cloneDeep } from 'lodash'\r\n\r\nconst mapState = (state: TState, ownProps: OwnProps) => {\r\n  const project = state.projects[id(state.projects, ownProps.projectId)]\r\n\r\n  return {\r\n    task: project.tasks[id(project.tasks, ownProps.taskId)],\r\n    projects: state.projects\r\n  }\r\n}\r\n\r\nconst actionCreators = {\r\n  setTask: setTaskA,\r\n  setProject: setProjectA\r\n}\r\n\r\ntype OwnProps = {\r\n  onClose: () => void\r\n  taskId: string\r\n  projectId: string\r\n}\r\n\r\ntype TProps = OwnProps & ReturnType<typeof mapState> & typeof actionCreators\r\n\r\nexport const EditTaskModal = connect(\r\n  mapState,\r\n  actionCreators\r\n)((props: TProps) => {\r\n  // apply changes locally (not in store) immediately, then when submit do on store and server\r\n  const [task, setTask] = useState(cloneDeep(props.task))\r\n\r\n  const [setSubtaskExec] = useMutation<\r\n    SetSubtaskMutation,\r\n    SetSubtaskMutationVariables\r\n  >(GQL_SET_SUBTASK, {\r\n    onCompleted: ({ setSubtask }) => {\r\n      props.setTask({\r\n        id: setSubtask.id,\r\n        projectId: props.projectId,\r\n        newTask: { ...setSubtask }\r\n      })\r\n    }\r\n  })\r\n\r\n  const [setCommentExec] = useMutation<\r\n    SetCommentMutation,\r\n    SetCommentMutationVariables\r\n  >(GQL_SET_COMMENT, {\r\n    onCompleted: ({ setComment }) => {\r\n      setTask({\r\n        ...setComment\r\n      })\r\n\r\n      props.setTask({\r\n        id: setComment.id,\r\n        projectId: props.projectId,\r\n        newTask: { ...setComment }\r\n      })\r\n    }\r\n  })\r\n\r\n  const [editTaskExec] = useMutation<\r\n    EditTaskMutation,\r\n    EditTaskMutationVariables\r\n  >(GQL_EDIT_TASK, {\r\n    variables: {\r\n      taskId: props.taskId,\r\n      newTask: {\r\n        name: task.name,\r\n        points: task.points,\r\n        dueDate: task.dueDate,\r\n        // recurrance: task.recurrance,\r\n        color: task.color\r\n      },\r\n      projId: props.projectId\r\n    }\r\n  })\r\n  const [dragTaskExec] = useMutation<\r\n    DragTaskMutation,\r\n    DragTaskMutationVariables\r\n  >(GQL_DRAG_TASK, {\r\n    onCompleted: ({ dragTask }) => {\r\n      props.setProject({ id: dragTask.project.id, newProj: dragTask.project })\r\n    }\r\n  })\r\n\r\n  const project = props.projects[id(props.projects, props.projectId)]\r\n\r\n  const ownerListId = project.lists.find(list =>\r\n    list.taskIds.includes(task.id)\r\n  )!.id\r\n\r\n  const [listId, setListId] = useState(ownerListId)\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open onClose={() => props.onClose()}>\r\n        <form\r\n          onSubmit={e => {\r\n            props.setTask({\r\n              id: props.task.id,\r\n              projectId: props.projectId,\r\n              newTask: task\r\n            })\r\n\r\n            console.log(task)\r\n\r\n            editTaskExec()\r\n            if (listId !== ownerListId) {\r\n              let newIndex = 0\r\n\r\n              const tasksInNewProgress = project.tasks.filter(filterTask => {\r\n                return (\r\n                  project.lists[id(project.lists, listId)].taskIds.includes(\r\n                    task.id\r\n                  ) && task.progress === filterTask.progress\r\n                )\r\n              })\r\n\r\n              if (tasksInNewProgress.length) {\r\n                const indexesInList = tasksInNewProgress.map(tasko => {\r\n                  return project.lists[\r\n                    id(project.lists, listId)\r\n                  ].taskIds.indexOf(tasko.id)\r\n                })\r\n                const lowest = Math.min(...indexesInList)\r\n                newIndex = lowest\r\n              }\r\n\r\n              dragTaskExec({\r\n                variables: {\r\n                  oldListId: ownerListId,\r\n                  newListId: listId,\r\n                  newIndex, // this is only correct in first progress\r\n                  id: task.id,\r\n                  newProgress: task.progress,\r\n                  projectId: props.projectId\r\n                }\r\n              })\r\n            }\r\n            e.preventDefault()\r\n            props.onClose()\r\n          }}\r\n          style={{\r\n            minWidth: 550,\r\n            minHeight: 450,\r\n            padding: '0px 16px',\r\n            paddingBottom: 12\r\n          }}\r\n        >\r\n          <DialogTitle style={{ paddingLeft: '0px' }}>Edit Task</DialogTitle>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'flex-end',\r\n              flex: '0 0 auto'\r\n            }}\r\n          >\r\n            <TextField\r\n              style={{ margin: '0 4px' }}\r\n              required\r\n              autoFocus\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              label=\"Title\"\r\n              value={task.name}\r\n              onChange={({ target }) =>\r\n                setTask({ ...task, name: target.value })\r\n              }\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              style={{ margin: '0 4px', width: '33%' }}\r\n              required\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              label=\"Points\"\r\n              value={task.points}\r\n              type=\"number\"\r\n              onChange={e => {\r\n                e.persist() // for some reason it unfocuses without this!\r\n                if (parseInt(e.target.value) >= 0) {\r\n                  setTask({ ...task, points: parseInt(e.target.value) })\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n          <div style={{ display: 'flex', marginTop: 8 }}>\r\n            <ChooseColor\r\n              color={task.color || '#FFFFFF'}\r\n              onChange={(color: string) => {\r\n                setTask({ ...task, color })\r\n              }}\r\n            />\r\n\r\n            <div style={{ width: 24 }} />\r\n\r\n            <FormControl fullWidth>\r\n              <Select\r\n                fullWidth\r\n                value={listId}\r\n                onChange={e => {\r\n                  setListId(e.target.value as any)\r\n                }}\r\n              >\r\n                {getAllListsArr(props.projects).map((list, i) => {\r\n                  return (\r\n                    <MenuItem key={list.id} value={list.id}>\r\n                      <pre>\r\n                        <em>{list.name}</em> of{' '}\r\n                        {\r\n                          props.projects[id(props.projects, props.projectId)]\r\n                            .name\r\n                        }\r\n                      </pre>\r\n                    </MenuItem>\r\n                  )\r\n                })}\r\n              </Select>\r\n              <FormHelperText>Task's List</FormHelperText>\r\n            </FormControl>\r\n          </div>\r\n          <div style={{ display: 'flex', marginTop: 8 }}>\r\n            <DateTimePicker\r\n              containerClassName=\"fullwidth\"\r\n              value={task.dueDate ? new Date(task.dueDate) : undefined}\r\n              onChange={(date: Date | undefined) => {\r\n                setTask({\r\n                  ...task,\r\n                  dueDate: date ? date.toString() : null\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <Typography\r\n            style={{\r\n              marginTop: 12,\r\n              fontSize: 22\r\n            }}\r\n            variant=\"subtitle1\"\r\n          >\r\n            Subtasks\r\n          </Typography>\r\n          {task.subTasks.map((subTask, i) => (\r\n            <div key={subTask.id} style={{ display: 'flex', marginTop: 8 }}>\r\n              <Checkbox\r\n                style={{ marginRight: 10, width: 32, height: 32 }}\r\n                disableRipple\r\n                checked={task.subTasks[i].completed}\r\n                onChange={e => {\r\n                  const subTasks = [...task.subTasks]\r\n                  const newCompleteStatus = !subTasks[i].completed\r\n                  subTasks[i].completed = newCompleteStatus\r\n                  setTask({ ...task, subTasks })\r\n\r\n                  setSubtaskExec({\r\n                    variables: {\r\n                      projId: props.projectId,\r\n                      taskId: props.task.id,\r\n                      subtaskId: subTask.id,\r\n                      info: {\r\n                        name: task.subTasks[i].name,\r\n                        completed: newCompleteStatus\r\n                      }\r\n                    }\r\n                  })\r\n                }}\r\n              />\r\n              <TextField\r\n                key={subTask.id}\r\n                margin=\"none\"\r\n                required\r\n                fullWidth\r\n                label={`Subtask ${i}`}\r\n                value={task.subTasks[i].name}\r\n                onBlur={e => {\r\n                  setSubtaskExec({\r\n                    variables: {\r\n                      projId: props.projectId,\r\n                      taskId: props.task.id,\r\n                      subtaskId: subTask.id,\r\n                      info: {\r\n                        name: task.subTasks[i].name,\r\n                        completed: subTask.completed\r\n                      }\r\n                    }\r\n                  })\r\n                }}\r\n                onChange={e => {\r\n                  setTask({\r\n                    ...task,\r\n                    subTasks: [\r\n                      ...task.subTasks.slice(0, i),\r\n                      { ...task.subTasks[i], name: e.target.value },\r\n                      ...task.subTasks.slice(i + 1)\r\n                    ]\r\n                  })\r\n                }}\r\n              />\r\n              <IconButton\r\n                style={{\r\n                  marginLeft: 10,\r\n                  width: 48,\r\n                  height: 48,\r\n                  marginTop: 'auto'\r\n                }}\r\n                onClick={() => {\r\n                  setTask({\r\n                    ...task,\r\n                    subTasks: task.subTasks.filter((sub) => sub.id !== task.subTasks[i].id)\r\n                  })\r\n                  setSubtaskExec({\r\n                    variables: {\r\n                      projId: props.projectId,\r\n                      taskId: props.task.id,\r\n                      subtaskId: subTask.id,\r\n                      info: null // means we are deleting\r\n                    }\r\n                  })\r\n                }}\r\n              >\r\n                <Delete />\r\n              </IconButton>\r\n            </div>\r\n          ))}\r\n          <Button\r\n            variant=\"outlined\"\r\n            style={{\r\n              marginTop: 8,\r\n              marginBottom: 8,\r\n              marginLeft: 'auto'\r\n            }}\r\n            onClick={() => {\r\n              const subTaskId = uuid()\r\n              setTask({\r\n                ...task,\r\n                subTasks: [...task.subTasks, {id: subTaskId, completed: false, name: 'Subtask Name' }]\r\n              })\r\n\r\n              setSubtaskExec({\r\n                variables: {\r\n                  projId: props.projectId,\r\n                  taskId: props.task.id,\r\n                  subtaskId: subTaskId,\r\n                  info: {\r\n                    name: 'Subtask Name',\r\n                    completed: false\r\n                  }\r\n                }\r\n              })\r\n            }}\r\n          >\r\n            <Add style={{ marginRight: 8 }} />\r\n            add subtask\r\n          </Button>\r\n\r\n          <Typography\r\n            style={{\r\n              marginTop: 12,\r\n              fontSize: 22\r\n            }}\r\n            variant=\"subtitle1\"\r\n          >\r\n            Comments\r\n          </Typography>\r\n          {task.comments.map((comment, i) => (\r\n            <div key={comment.id} style={{ marginTop: 8, display: 'flex' }}>\r\n              <TextField\r\n                key={comment.id}\r\n                margin=\"dense\"\r\n                onBlur={e => {\r\n                  setCommentExec({\r\n                    variables: {\r\n                      projId: props.projectId,\r\n                      taskId: props.task.id,\r\n                      commentId: comment.id,\r\n                      description: task.comments[i].comment\r\n                    }\r\n                  })\r\n                }}\r\n                required\r\n                placeholder=\"Comment Name\"\r\n                fullWidth\r\n                value={task.comments[i].comment}\r\n                label={formatDueDate({\r\n                  ...task,\r\n                  dueDate: comment.dateAdded,\r\n                  recurrance: undefined\r\n                }).slice(4)}\r\n                onChange={e => {\r\n                  const newComments = [...task.comments]\r\n                  newComments[i].comment = e.target.value\r\n\r\n                  setTask({\r\n                    ...task,\r\n                    comments: newComments\r\n                  })\r\n                }}\r\n              />\r\n              <IconButton\r\n                style={{\r\n                  marginLeft: 10,\r\n                  marginTop: 'auto',\r\n                  width: 48,\r\n                  height: 48\r\n                }}\r\n                onClick={() => {\r\n                  setCommentExec({\r\n                    variables: {\r\n                      projId: props.projectId,\r\n                      taskId: props.task.id,\r\n                      commentId: comment.id\r\n                    }\r\n                  })\r\n                }}\r\n              >\r\n                <Delete />\r\n              </IconButton>\r\n            </div>\r\n          ))}\r\n          <Button\r\n            variant=\"outlined\"\r\n            onClick={() => {\r\n              setCommentExec({\r\n                variables: {\r\n                  projId: props.projectId,\r\n                  taskId: props.task.id,\r\n                  description: 'Comment'\r\n                }\r\n              })\r\n            }}\r\n            style={{ marginTop: 8 }}\r\n          >\r\n            <Add style={{ marginRight: 8 }} />\r\n            Add Comment\r\n          </Button>\r\n\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              marginTop: 8,\r\n              justifyContent: 'flex-end'\r\n            }}\r\n          >\r\n            <Button color=\"secondary\" type=\"submit\" variant=\"contained\">\r\n              Save\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n})\r\n","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  WithStyles,\r\n  withStyles,\r\n  Theme,\r\n  createStyles,\r\n  Tooltip,\r\n  Paper,\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Fab,\r\n  TableBody\r\n} from '@material-ui/core'\r\nimport { TState } from '../../types/state'\r\nimport { selectMemberA, setProjectA } from '../../store/actions/project'\r\nimport { CreateColumn } from './CreateColumn'\r\nimport { Add, FilterList, Settings, Equalizer } from '@material-ui/icons'\r\nimport { DragDropContext, DropResult } from 'react-beautiful-dnd'\r\nimport { NoMatch } from '../NoMatch/NoMatch'\r\nimport Helmet from 'react-helmet'\r\nimport { ProjectSettings } from './ProjectSettings'\r\nimport {\r\n  EditProjectMutation,\r\n  EditProjectMutationVariables,\r\n  DragTaskMutation,\r\n  DragTaskMutationVariables,\r\n  DeleteListMutation,\r\n  DeleteListMutationVariables\r\n} from '../../graphql/types'\r\nimport { openSnackbarA } from '../../store/actions/snackbar'\r\nimport { GQL_EDIT_PROJECT } from '../../graphql/mutations/project'\r\nimport { id } from '../../utils/utilities'\r\nimport { ProjectCell } from './Cell/ProjectCell'\r\nimport { cloneDeep } from 'apollo-utilities'\r\nimport { GQL_DRAG_TASK } from '../../graphql/mutations/task'\r\nimport { useMutation } from 'react-apollo'\r\n\r\nimport { EditTaskModal } from './Task/Edit'\r\nimport { setListA } from '../../store/actions/list'\r\nimport { GQL_DELETE_LIST } from '../../graphql/mutations/list'\r\n\r\n/**\r\n * @todo add a filter menu with color, column, due date, label\r\n */\r\n\r\ntype OwnProps = {\r\n  params: {\r\n    id: string\r\n  }\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    fab: {\r\n      position: 'fixed',\r\n      bottom: theme.spacing(2),\r\n      right: theme.spacing(2)\r\n    },\r\n    tooltip: {\r\n      fontSize: 18\r\n    },\r\n    appbar: {},\r\n    input: {\r\n      overflow: 'hidden',\r\n      whiteSpace: 'nowrap',\r\n      textOverflow: 'ellipsis',\r\n      minWidth: '20%',\r\n      fontSize: 18,\r\n      outline: 'none',\r\n      backgroundColor: '#f5f5f5',\r\n      borderRadius: 4,\r\n      width: 'auto',\r\n      padding: 8,\r\n      border: '1px solid transparent',\r\n      '&:hover': {\r\n        backgroundColor: 'white'\r\n      },\r\n      '&:focus': {\r\n        borderColor: '#27b6ba'\r\n      }\r\n    }\r\n  })\r\n\r\ntype TProps = ReturnType<typeof mapState> &\r\n  typeof actionCreators &\r\n  OwnProps &\r\n  WithStyles<typeof styles>\r\n\r\nexport const getMobile = (window: Window) => {\r\n  return window.innerWidth <= 1000\r\n}\r\n\r\nexport type TFilterData = {\r\n  dueDate: {\r\n    start: Date\r\n    end: Date\r\n  }\r\n  color?: string // what if we have a multiselect? string is the key of colors object\r\n  points?: number\r\n}\r\n\r\nconst CProject = (props: TProps) => {\r\n  const [editingTaskId, setEditingTaskId] = useState('')\r\n  const [settings, setSettings] = useState(false)\r\n  const [dialogOpen, setDialogOpen] = useState(false)\r\n  const [isMobile, setIsMobile] = useState(getMobile(window))\r\n  const [collapsedLists, setCollapsedLists] = useState([] as string[])\r\n\r\n  if (isMobile) {\r\n  }\r\n\r\n  const [name, setName] = useState(\r\n    props.project ? props.project.name : undefined\r\n  )\r\n\r\n  const [deleteListExec] = useMutation<\r\n    DeleteListMutation,\r\n    DeleteListMutationVariables\r\n  >(GQL_DELETE_LIST, {})\r\n\r\n  const [dragTaskExec] = useMutation<\r\n    DragTaskMutation,\r\n    DragTaskMutationVariables\r\n  >(GQL_DRAG_TASK, {})\r\n\r\n  const draggo = (vars: DragTaskMutationVariables) => {\r\n    dragTaskExec({ variables: vars })\r\n  }\r\n\r\n  const onDragEnd = (result: DropResult) => {\r\n    if (!result.destination) {\r\n      return\r\n    }\r\n    if (\r\n      result.source.droppableId === result.destination.droppableId &&\r\n      result.source.index === result.destination.index\r\n    ) {\r\n      return\r\n    }\r\n\r\n    const [[fromListId], [toListId, toProgress]] = [\r\n      result.source.droppableId.split('DIVIDER'),\r\n      result.destination.droppableId.split('DIVIDER')\r\n    ]\r\n\r\n    const editProject = cloneDeep(props.project)\r\n\r\n    const fromList = editProject.lists[id(editProject.lists, fromListId)]\r\n\r\n    const toList = editProject.lists[id(editProject.lists, toListId)]\r\n\r\n    // react-beautiful-dnd will not give accurate index, because each droppable has only the tasks with the same progress/column\r\n    let actualIndex =\r\n      result.destination.index +\r\n      props.project.tasks.reduce((accum, task) => {\r\n        if (\r\n          task.progress < parseInt(toProgress, 10) &&\r\n          toList.taskIds.includes(task.id)\r\n        ) {\r\n          return accum + 1\r\n        }\r\n        return accum\r\n      }, 0)\r\n\r\n    if (\r\n      fromList.id === toList.id &&\r\n      props.project.tasks[id(props.project.tasks, result.draggableId)]\r\n        .progress !== parseInt(toProgress, 10)\r\n    ) {\r\n      const addingLater =\r\n        actualIndex >\r\n        fromList.taskIds.findIndex(taskId => taskId === result.draggableId)\r\n\r\n      if (addingLater) {\r\n        actualIndex -= 1\r\n      }\r\n    }\r\n\r\n    if (actualIndex < 0) {\r\n      actualIndex = 0\r\n    }\r\n\r\n    // remove old taskId instance\r\n    fromList.taskIds = fromList.taskIds.filter(\r\n      taskId => taskId !== result.draggableId\r\n    )\r\n\r\n    // add new taskId instance\r\n    toList.taskIds.splice(actualIndex, 0, result.draggableId)\r\n\r\n    // change tasks column\r\n    editProject.tasks[\r\n      id(editProject.tasks, result.draggableId)\r\n    ].progress = parseInt(toProgress, 10)\r\n\r\n    // mutate store to save changes\r\n    props.setProject({ id: props.project.id, newProj: editProject })\r\n\r\n    draggo({\r\n      id: result.draggableId,\r\n      newIndex: actualIndex,\r\n      oldListId: fromListId,\r\n      newListId: toListId,\r\n      newProgress: parseInt(toProgress),\r\n      projectId: props.project.id\r\n    })\r\n\r\n    return\r\n  }\r\n\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth)\r\n\r\n  React.useEffect(() => {\r\n    window.addEventListener('resize', () => {\r\n      setIsMobile(getMobile(window))\r\n      setWindowWidth(window.innerWidth)\r\n    })\r\n\r\n    return () =>\r\n      window.removeEventListener('resize', () => {\r\n        setIsMobile(getMobile(window))\r\n        setWindowWidth(window.innerWidth)\r\n      })\r\n  }, [])\r\n\r\n  const [editProjectExec] = useMutation<\r\n    EditProjectMutation,\r\n    EditProjectMutationVariables\r\n  >(GQL_EDIT_PROJECT, {})\r\n\r\n  const { classes, project } = props\r\n  if (project) {\r\n    return (\r\n      <div>\r\n        <Helmet>\r\n          <style type=\"text/css\">{` body { background-color: #1d364c; }`}</style>\r\n          <meta\r\n            name={'description'}\r\n            content={'Projects help you become stronk'}\r\n          />\r\n        </Helmet>\r\n        <AppBar color=\"default\" className={classes.appbar} position=\"static\">\r\n          <Toolbar>\r\n            <input\r\n              style={{ width: `${windowWidth - 300}px` }}\r\n              className={classes.input}\r\n              value={name}\r\n              onBlur={() =>\r\n                editProjectExec({\r\n                  variables: {\r\n                    newProj: { name: name || 'newname' },\r\n                    id: project.id\r\n                  }\r\n                })\r\n              }\r\n              onChange={(e: any) => setName(e.target.value)}\r\n            />\r\n            <div style={{ marginLeft: 'auto' }}>\r\n              <IconButton onClick={() => null}>\r\n                <FilterList />\r\n              </IconButton>\r\n              <IconButton\r\n                onClick={() => setSettings(true)}\r\n                style={{ marginLeft: 8 }}\r\n              >\r\n                <Settings />\r\n              </IconButton>\r\n              <IconButton style={{ marginLeft: 8 }}>\r\n                <Equalizer />\r\n              </IconButton>\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Paper\r\n          style={{\r\n            margin: 20,\r\n            padding: 20,\r\n            paddingBottom: 80,\r\n            minHeight: 'calc(100vh - 328px)'\r\n          }}\r\n        >\r\n          <DragDropContext onDragEnd={onDragEnd}>\r\n            <table\r\n              style={{\r\n                tableLayout: 'fixed',\r\n                width: '100%',\r\n                borderCollapse: 'separate'\r\n              }}\r\n            >\r\n              <TableBody>\r\n                <tr style={{ display: 'flex' }}>\r\n                  {[0, 1, 2].map(col => (\r\n                    <td\r\n                      key={col}\r\n                      style={{\r\n                        width: '100%',\r\n                        backgroundColor: '#f2f2f2',\r\n                        borderLeft: col ? 'none' : '1px solid #aebacc',\r\n                        borderRight: '1px solid #aebacc',\r\n                        borderTop: '1px solid #aebacc',\r\n                        textAlign: 'center',\r\n                        padding: 8,\r\n                        fontSize: 20\r\n                      }}\r\n                    >\r\n                      {col === 0\r\n                        ? 'No Progress'\r\n                        : col === 1\r\n                        ? 'In Progress'\r\n                        : 'Complete'}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n                {project.lists.map(list => (\r\n                  <tr\r\n                    style={{\r\n                      verticalAlign: 'top',\r\n                      display: 'flex'\r\n                    }}\r\n                    key={list.id}\r\n                  >\r\n                    {[0, 1, 2].map((progress, i) => (\r\n                      <ProjectCell\r\n                        deleteList={listId => {\r\n                          props.setList({\r\n                            id: listId,\r\n                            projectId: props.project.id,\r\n                            newList: null\r\n                          })\r\n                          deleteListExec({\r\n                            variables: {\r\n                              projectId: props.project.id,\r\n                              id: list.id\r\n                            }\r\n                          })\r\n                        }}\r\n                        collapseList={listId => {\r\n                          if (collapsedLists.includes(listId)) {\r\n                            setCollapsedLists(\r\n                              collapsedLists.filter(lId => listId !== lId)\r\n                            )\r\n                          } else {\r\n                            setCollapsedLists([...collapsedLists, listId])\r\n                          }\r\n                        }}\r\n                        collapsedLists={collapsedLists}\r\n                        openFunc={(tId: string) => setEditingTaskId(tId)}\r\n                        key={i}\r\n                        progress={progress}\r\n                        list={list}\r\n                        project={project}\r\n                      />\r\n                    ))}\r\n                  </tr>\r\n                ))}\r\n              </TableBody>\r\n            </table>\r\n          </DragDropContext>\r\n\r\n          {dialogOpen && (\r\n            <CreateColumn\r\n              onClose={() => setDialogOpen(false)}\r\n              project={project}\r\n            />\r\n          )}\r\n        </Paper>\r\n\r\n        <Tooltip\r\n          placement=\"left\"\r\n          classes={{ tooltip: classes.tooltip }}\r\n          title=\"Add List\"\r\n        >\r\n          <Fab\r\n            onClick={() => setDialogOpen(true)}\r\n            color=\"primary\"\r\n            className={classes.fab}\r\n          >\r\n            <Add />\r\n          </Fab>\r\n        </Tooltip>\r\n        {settings && (\r\n          <ProjectSettings\r\n            project={props.project}\r\n            onClose={() => setSettings(false)}\r\n          />\r\n        )}\r\n        {editingTaskId && (\r\n          <EditTaskModal\r\n            taskId={editingTaskId}\r\n            onClose={() => setEditingTaskId('')}\r\n            projectId={props.project.id}\r\n          />\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n  return <NoMatch />\r\n}\r\n\r\nconst mapState = (state: TState, ownProps: OwnProps) => {\r\n  return {\r\n    project: state.projects[id(state.projects, ownProps.params.id)]\r\n  }\r\n}\r\n\r\nconst actionCreators = {\r\n  setProject: setProjectA,\r\n  selectMember: selectMemberA,\r\n  openSnackbar: openSnackbarA,\r\n  setList: setListA\r\n}\r\n\r\nexport const Project = withStyles(styles)(\r\n  connect(\r\n    mapState,\r\n    actionCreators\r\n  )(CProject)\r\n)\r\n","import React from 'react'\r\nimport {\r\n  Theme,\r\n  createStyles,\r\n  WithStyles,\r\n  withStyles,\r\n  ListSubheader,\r\n  ListItem,\r\n  ListItemText,\r\n  Button\r\n} from '@material-ui/core'\r\nimport { List } from '@material-ui/core'\r\n\r\nimport { Helmet } from 'react-helmet'\r\nimport { connect } from 'react-redux'\r\nimport { Mutation, MutationResult } from 'react-apollo'\r\nimport { openSnackbarA } from '../../store/actions/snackbar'\r\nimport { LogoutMutation, LogoutMutationVariables } from '../../graphql/types'\r\nimport { GQL_LOGOUT } from '../../graphql/mutations/auth'\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      maxWidth: 1000,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n      backgroundColor: theme.palette.background.paper,\r\n      width: '95%',\r\n      marginTop: 50\r\n    }\r\n  })\r\n\r\ntype TProps = WithStyles<typeof styles> & typeof actionCreators\r\n\r\nconst CSettings = (props: TProps) => {\r\n  const { classes } = props\r\n  return (\r\n    <>\r\n      <div>\r\n        <Helmet>\r\n          <style>{'body { background-color: #eeeeee; }'}</style>\r\n        </Helmet>\r\n        <List\r\n          subheader={<ListSubheader>Data</ListSubheader>}\r\n          className={classes.root}\r\n        >\r\n          <ListItem>\r\n            <ListItemText\r\n              primary=\"Log Out\"\r\n              secondary=\"This action cannot be undone\"\r\n            />\r\n            <Mutation\r\n              mutation={GQL_LOGOUT}\r\n              onCompleted={() => {\r\n                location.href = '#/'\r\n                location.reload()\r\n              }}\r\n              onError={() => {\r\n                props.openSnackbar('You are stuck here forever, oops!', 'error')\r\n              }}\r\n            >\r\n              {(\r\n                logout: (args: { variables: LogoutMutationVariables }) => any,\r\n                result: MutationResult<LogoutMutation>\r\n              ) => {\r\n                return (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => logout({ variables: {} })}\r\n                    style={{\r\n                      marginLeft: 'auto'\r\n                    }}\r\n                  >\r\n                    Log Out\r\n                  </Button>\r\n                )\r\n              }}\r\n            </Mutation>\r\n          </ListItem>\r\n        </List>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst actionCreators = {\r\n  openSnackbar: openSnackbarA\r\n}\r\n\r\nexport const Settings = connect(\r\n  null,\r\n  { ...actionCreators }\r\n)(withStyles(styles)(CSettings))\r\n","import { Droppable, Draggable } from 'react-beautiful-dnd'\r\nimport { connect } from 'react-redux'\r\nimport { TState } from '../../types/state'\r\nimport { getDate, getDay, isPast, addHours } from 'date-fns'\r\nimport { BaseTask } from '../Project/Task/Base'\r\n// import { TaskModal } from '../TaskModal/TaskModal'\r\nimport { Theme, WithStyles, withStyles } from '@material-ui/core'\r\nimport { getProjectIdFromTaskId, id } from '../../utils/utilities'\r\nimport React from 'react'\r\n\r\ntype OwnProps = {\r\n  day: Date\r\n  index: 0 | 1 | 2 | 3 | 4 | 5 | 6\r\n  filteringProjects: string[]\r\n}\r\n\r\nfunction sameDay(d1: Date, d2: Date) {\r\n  return (\r\n    d1.getFullYear() === d2.getFullYear() &&\r\n    d1.getMonth() === d2.getMonth() &&\r\n    d1.getDate() === d2.getDate()\r\n  )\r\n}\r\n\r\nconst names = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\r\n\r\nconst styles = (theme: Theme) => ({})\r\n\r\ntype TProps = OwnProps & ReturnType<typeof mapState> & WithStyles<typeof styles>\r\n\r\nconst CWeekDay = (props: TProps) => {\r\n  const { day, tasks, index } = props\r\n  const hasPassed = isPast(addHours(day, 20))\r\n  const withDate = tasks.filter(\r\n    task =>\r\n      task.dueDate !== undefined &&\r\n      getDate(new Date(task.dueDate!)) === getDate(day)\r\n  )\r\n  if (withDate.length) {\r\n    withDate.sort(\r\n      (a, b) => new Date(a.dueDate!).getTime() - new Date(b.dueDate!).getTime()\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        borderRight: index !== 6 ? '1px solid #e0e0e0' : undefined,\r\n        flex: '1 0 calc(1000px / 7)',\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          position: 'absolute',\r\n          fontSize: '3.2rem',\r\n          fontWeight: 300,\r\n          margin: '0 0 0 .8rem',\r\n          paddingBottom: '.4rem',\r\n          color: sameDay(day, new Date()) ? '#4285f4' : '#555'\r\n        }}\r\n      >\r\n        {day.getDate()}\r\n        <div style={{ fontSize: '1.3rem' }}>{names[getDay(day)]}</div>\r\n      </div>\r\n      <Droppable\r\n        isDropDisabled={hasPassed}\r\n        droppableId={day.getTime().toString()}\r\n      >\r\n        {(provided, snapshot) => (\r\n          <div\r\n            style={{\r\n              backgroundColor: snapshot.isDraggingOver ? '#bae3ff' : 'white',\r\n              transition: 'background-color .2s ease',\r\n              height: '100%'\r\n            }}\r\n            {...provided.droppableProps}\r\n            ref={provided.innerRef}\r\n          >\r\n            {withDate.map((task, i) => (\r\n              <Draggable\r\n                key={task.id}\r\n                index={i}\r\n                draggableId={task.id.toString()}\r\n              >\r\n                {(prov, snap) => (\r\n                  <div style={{paddingTop: i ? 0 : 93}}>\r\n                  <BaseTask\r\n                    project={\r\n                      props.projects[\r\n                        id(\r\n                          props.projects,\r\n                          getProjectIdFromTaskId(props.projects, task.id)\r\n                        )\r\n                      ]\r\n                    }\r\n                    openFunc={() => null}\r\n                    provided={prov}\r\n                    snapshot={snap}\r\n                    task={task}\r\n                  />\r\n                  </div>\r\n                )}\r\n              </Draggable>\r\n            ))}\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapState = (state: TState, ownProps: OwnProps) => ({\r\n  tasks: state.projects.reduce((accum, proj) => {\r\n    return [...accum, ...proj.tasks]\r\n  }, []),\r\n  projects: state.projects\r\n})\r\n\r\nexport const WeekDay = withStyles(styles)(connect(mapState)(CWeekDay))\r\n","import React, { CSSProperties } from 'react'\r\nimport { TProject } from '../../types/project'\r\nimport {\r\n  Select,\r\n  MenuItem,\r\n  IconButton,\r\n  Theme,\r\n  createStyles,\r\n  WithStyles,\r\n  withStyles\r\n} from '@material-ui/core'\r\nimport { NavigateBefore, NavigateNext } from '@material-ui/icons'\r\nimport { format, addDays, subDays } from 'date-fns'\r\n\r\nconst mobilePx = 750\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    nav: {\r\n      [theme.breakpoints.up(mobilePx)]: {\r\n        ...boxStyle\r\n      },\r\n      [theme.breakpoints.down(mobilePx)]: {\r\n        marginRight: 'auto'\r\n      }\r\n    }\r\n  })\r\n\r\ntype OwnProps = {\r\n  projects: TProject[]\r\n  toggleProject: (id: string[]) => void\r\n  currIds: string[]\r\n  startDay: Date\r\n  setDate: (newDay: Date) => void\r\n}\r\n\r\nconst boxStyle: CSSProperties = {\r\n  alignItems: 'center',\r\n  flex: 1,\r\n  display: 'flex',\r\n  justifyContent: 'center'\r\n}\r\n\r\ntype TProps = OwnProps & WithStyles<typeof styles>\r\n\r\nconst CWeekControls = (props: TProps) => {\r\n  const { projects, toggleProject, currIds } = props\r\n\r\n  console.log(props)\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex'\r\n      }}\r\n    >\r\n      <Select\r\n        style={{ maxWidth: '30%', ...boxStyle }}\r\n        value={currIds.length === 0 ? ['-1'] : currIds}\r\n        onChange={e => {\r\n          const withoutAllProjects = (e.target.value as any).filter(\r\n            (num: string) => num !== '-1'\r\n          )\r\n          toggleProject(\r\n            // we dont want the array to even be empty, and we dont want both the All projects and anything else to show at the same time.\r\n            ((e as any).target.value.includes('-1') &&\r\n              !currIds.includes('-1')) ||\r\n              withoutAllProjects.length === 0\r\n              ? ['-1']\r\n              : withoutAllProjects\r\n          )\r\n        }}\r\n        multiple\r\n      >\r\n        <MenuItem value={-1}>All Projects</MenuItem>\r\n        {Object.values(projects).map(project => (\r\n          <MenuItem key={project.id} value={project.id}>\r\n            {project.name}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n      <div className={props.classes.nav}>\r\n        <IconButton onClick={() => props.setDate(subDays(props.startDay, 6))}>\r\n          <NavigateBefore />\r\n        </IconButton>\r\n        <span style={{ margin: '10px' }}>\r\n          {`${format(props.startDay, 'MMM d')} - ${format(\r\n            addDays(props.startDay, 6),\r\n            'MMM d'\r\n          )}`}\r\n        </span>\r\n        <IconButton onClick={() => props.setDate(addDays(props.startDay, 8))}>\r\n          <NavigateNext />\r\n        </IconButton>\r\n      </div>\r\n      {window.innerWidth >= mobilePx && <div style={boxStyle} />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const WeekControls = withStyles(styles)(CWeekControls)\r\n","import React, { useState } from 'react'\r\nimport { WithStyles, Theme, createStyles, withStyles } from '@material-ui/core'\r\nimport { setTaskA } from '../../store/actions/task'\r\nimport { connect } from 'react-redux'\r\nimport { TState } from '../../types/state'\r\nimport { DropResult, DragDropContext } from 'react-beautiful-dnd'\r\nimport { subDays, addDays } from 'date-fns'\r\nimport { WeekDay } from './WeekDay'\r\nimport { WeekControls } from './WeekControls'\r\nimport { differenceInCalendarDays } from 'date-fns'\r\nimport { getProjectIdFromTaskId, id } from '../../utils/utilities'\r\n\r\ntype TProps = ReturnType<typeof mapState> &\r\n  typeof actionCreators &\r\n  WithStyles<typeof styles>\r\n\r\n/** Gets the day behind the passed date, the passed date, and the 5 dates after passed date */\r\nconst getDays = (start: Date): Date[] => {\r\n  const result: Date[] = [subDays(start, 1), start]\r\n  for (let i = 0; i < 5; i++) {\r\n    result.push(addDays(start, i + 1)) // start at adding 1 day\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    dragContainer: {\r\n      border: '1px solid #dadce0',\r\n      borderRadius: '.8rem',\r\n      overflowX: 'hidden',\r\n      marginTop: 10\r\n    },\r\n    tasksContainer: {\r\n      minHeight: 200,\r\n      overflowX: 'auto',\r\n      display: 'flex',\r\n      flex: '1 1 auto'\r\n    }\r\n  })\r\n\r\nconst CWeek = withStyles(styles)((props: TProps) => {\r\n  const [filterProjectId, setFilterProjectId] = useState(['-1'])\r\n  const [baseDay, setBaseDay] = useState(new Date())\r\n\r\n  const allTasks = props.projects.reduce((tasks, project) => {\r\n    return [...tasks, ...project.tasks]\r\n  }, [])\r\n\r\n  const weekEmpty = Boolean(allTasks.filter((task) => task.dueDate !== undefined).length)\r\n\r\n  const onDragEnd = (result: DropResult) => {\r\n    const { source, destination, draggableId } = result\r\n\r\n    if (!destination || source.droppableId === destination.droppableId) {\r\n      return // dragging outside boundaries or dropping into the same day\r\n    }\r\n\r\n    const task = allTasks[id(allTasks, draggableId)]\r\n\r\n    const findNewDate = (taskDueDate: string) => {\r\n      const newDay = new Date(parseInt(destination.droppableId))\r\n\r\n      const diff = differenceInCalendarDays(newDay, new Date(taskDueDate))\r\n\r\n      return addDays(new Date(taskDueDate), diff).toString()\r\n    }\r\n\r\n    const newTask = {\r\n      ...task,\r\n      dueDate: findNewDate(allTasks[id(allTasks, draggableId)].dueDate!)\r\n    }\r\n\r\n    props.setTask({\r\n      id: draggableId,\r\n      newTask,\r\n      projectId: getProjectIdFromTaskId(props.projects, draggableId)\r\n    })\r\n  }\r\n\r\n  const days = getDays(baseDay)\r\n  return (\r\n    <>\r\n      <div style={{ margin: 20 }}>\r\n        <WeekControls\r\n          startDay={days[0]}\r\n          currIds={filterProjectId}\r\n          projects={props.projects}\r\n          toggleProject={(projId: string[]) => {\r\n            setFilterProjectId(projId)\r\n          }}\r\n          setDate={(newDay: Date) => setBaseDay(newDay)}\r\n        />\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n          <div className={props.classes.dragContainer}>\r\n            <div className={props.classes.tasksContainer}>\r\n              {days.map((day, i) => (\r\n                <WeekDay\r\n                  filteringProjects={filterProjectId}\r\n                  day={day}\r\n                  key={i}\r\n                  index={i as any}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </DragDropContext>\r\n      </div>\r\n      {weekEmpty && (\r\n        <h1 style={{margin: '20px auto', textAlign: 'center'}}>You have no tasks with due dates</h1>\r\n      )}\r\n    </>\r\n  )\r\n})\r\n\r\nconst mapState = (state: TState) => ({\r\n  projects: state.projects\r\n})\r\n\r\nconst actionCreators = {\r\n  setTask: setTaskA\r\n}\r\n\r\nexport const CalendarWeek = connect(\r\n  mapState,\r\n  actionCreators\r\n)(CWeek)\r\n","import React, { CSSProperties, useState } from 'react'\r\nimport { render } from 'react-dom'\r\nimport './index.css'\r\nimport { Provider } from 'react-redux'\r\nimport { MuiThemeProvider } from '@material-ui/core/styles'\r\nimport { Switch, Route, HashRouter } from 'react-router-dom'\r\n\r\nimport { store } from './store/store'\r\nimport { createMuiTheme } from '@material-ui/core/styles'\r\nimport { Pomodoro } from './components/Pomodoro/Pomodoro'\r\nimport { AuthRender } from './components/Auth/Auth'\r\nimport { CreateProject } from './components/createProject/CreateProject'\r\nimport { NoMatch } from './components/NoMatch/NoMatch'\r\nimport { Fab, CircularProgress } from '@material-ui/core'\r\nimport { Timer } from '@material-ui/icons'\r\nimport { About } from './components/Landing/About'\r\n\r\nimport { Header } from './components/Header'\r\n// import { WelcomeDialog } from './components/Welcome/WelcomeDialog'\r\nimport { SnackbarRoot } from './components/utils/SnackbarRoot'\r\nimport { ApolloProvider } from 'react-apollo'\r\nimport { print } from 'graphql'\r\nimport { loginA } from './store/actions/auth'\r\nimport { Mutation } from './graphql/types'\r\nimport { fetchQuery } from './API/initialize'\r\n\r\nconst secondary = '#0336FF'\r\nconst primary = '#00838f'\r\n// const primary = '#f4511e'\r\n// const secondary = '#3f51b5'\r\n\r\n/** @description Material ui theme, used in wrapper.tsx */\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: primary\r\n    },\r\n    secondary: {\r\n      main: secondary\r\n    }\r\n  }\r\n})\r\n\r\nexport const fabStyle: CSSProperties = {\r\n  position: 'fixed',\r\n  bottom: theme.spacing(2),\r\n  left: theme.spacing(2),\r\n  zIndex: 999\r\n}\r\n\r\nimport { openSnackbarA } from './store/actions/snackbar'\r\nimport { GQL_LOGIN_WITH_COOKIE } from './graphql/mutations/auth'\r\nimport { client } from './apollo'\r\nimport { PublicOnlyRoute, PrivateRoute } from './components/utils/Routing'\r\nimport { Project } from './components/Project/Project'\r\nimport { Settings } from './components/Settings/Settings'\r\nimport { CalendarWeek } from './components/Calendar/Week'\r\n\r\nconst Router = () => {\r\n  const [open, setOpen] = useState(false)\r\n  const [loaded, setLoaded] = useState(false)\r\n\r\n  window.onload = async () => {\r\n    try {\r\n      const {\r\n        loginWithCookie\r\n      }: { loginWithCookie: Mutation['loginWithCookie'] } = await fetchQuery(\r\n        print(GQL_LOGIN_WITH_COOKIE)\r\n      )\r\n\r\n      if (loginWithCookie && loginWithCookie.user) {\r\n        store.dispatch(loginA(loginWithCookie.user as any) as any)\r\n      } else {\r\n        store.dispatch(openSnackbarA('Hey there, Welcome!', 'standard'))\r\n      }\r\n\r\n      setLoaded(true)\r\n    } catch (err) {\r\n      setLoaded(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <HashRouter>\r\n      <>\r\n        <Header />\r\n        <Pomodoro open={open} stateFunc={(bool: boolean) => setOpen(bool)} />\r\n        {/* <WelcomeDialog /> */}\r\n        {!open && (\r\n          <>\r\n            <Fab\r\n              style={fabStyle}\r\n              color=\"secondary\"\r\n              onClick={() => setOpen(true)}\r\n            >\r\n              <Timer />\r\n            </Fab>\r\n          </>\r\n        )}\r\n        {loaded ? (\r\n          <Switch>\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/settings\"\r\n              component={Settings}\r\n              componentProps={{}}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/calendar\"\r\n              component={CalendarWeek}\r\n              componentProps={{}}\r\n            />\r\n            <PublicOnlyRoute\r\n              exact\r\n              path=\"/login\"\r\n              component={AuthRender}\r\n              componentProps={{ authType: 'Login' }}\r\n            />\r\n            <PublicOnlyRoute\r\n              exact\r\n              path=\"/register\"\r\n              component={AuthRender}\r\n              componentProps={{ authType: 'Register' }}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/create-project\"\r\n              component={CreateProject}\r\n              componentProps={{}}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/project/:id\"\r\n              component={Project}\r\n              componentProps={{}}\r\n            />\r\n            <PublicOnlyRoute\r\n              exact\r\n              path=\"/\"\r\n              component={About}\r\n              componentProps={() => ({})}\r\n            />\r\n            <Route component={NoMatch} />\r\n          </Switch>\r\n        ) : (\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              top: 0,\r\n              bottom: 0,\r\n              left: 0,\r\n              right: 0,\r\n              display: 'flex',\r\n              justifyContent: 'space-around'\r\n            }}\r\n          >\r\n            <CircularProgress\r\n              style={{\r\n                width: '128px',\r\n                height: '128px',\r\n                marginRight: 64,\r\n                marginTop: 100\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n      </>\r\n    </HashRouter>\r\n  )\r\n}\r\n\r\nexport const Wrapper = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <ApolloProvider client={client}>\r\n        <MuiThemeProvider theme={theme}>\r\n          <SnackbarRoot />\r\n          <Router />\r\n        </MuiThemeProvider>\r\n      </ApolloProvider>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nimport Moment from 'moment'\r\nimport 'react-widgets/dist/css/react-widgets.css'\r\n\r\nconst momentLocalizer = require('react-widgets-moment')\r\n\r\nMoment.locale('en')\r\nmomentLocalizer()\r\n\r\nrender(<Wrapper />, document.getElementById('root'))\r\n"],"sourceRoot":""}